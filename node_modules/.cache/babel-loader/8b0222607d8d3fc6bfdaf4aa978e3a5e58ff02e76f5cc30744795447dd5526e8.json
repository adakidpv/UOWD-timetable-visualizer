{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/projects/timetable-chooser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { courseData } from './data/courseData';\nimport html2canvas from 'html2canvas';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Predefined muted color options\n  const colorOptions = [{\n    name: \"Slate\",\n    selected: \"bg-slate-300 border-slate-500\",\n    unselected: \"bg-slate-200 border-slate-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Gray\",\n    selected: \"bg-gray-300 border-gray-500\",\n    unselected: \"bg-gray-200 border-gray-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Zinc\",\n    selected: \"bg-zinc-300 border-zinc-500\",\n    unselected: \"bg-zinc-200 border-zinc-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Stone\",\n    selected: \"bg-stone-300 border-stone-500\",\n    unselected: \"bg-stone-200 border-stone-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Red\",\n    selected: \"bg-red-200 border-red-400\",\n    unselected: \"bg-red-100 border-red-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Orange\",\n    selected: \"bg-orange-200 border-orange-400\",\n    unselected: \"bg-orange-100 border-orange-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Amber\",\n    selected: \"bg-amber-200 border-amber-400\",\n    unselected: \"bg-amber-100 border-amber-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Yellow\",\n    selected: \"bg-yellow-200 border-yellow-400\",\n    unselected: \"bg-yellow-100 border-yellow-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Lime\",\n    selected: \"bg-lime-200 border-lime-400\",\n    unselected: \"bg-lime-100 border-lime-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Green\",\n    selected: \"bg-green-200 border-green-400\",\n    unselected: \"bg-green-100 border-green-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Emerald\",\n    selected: \"bg-emerald-200 border-emerald-400\",\n    unselected: \"bg-emerald-100 border-emerald-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Teal\",\n    selected: \"bg-teal-200 border-teal-400\",\n    unselected: \"bg-teal-100 border-teal-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Cyan\",\n    selected: \"bg-cyan-200 border-cyan-400\",\n    unselected: \"bg-cyan-100 border-cyan-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Sky\",\n    selected: \"bg-sky-200 border-sky-400\",\n    unselected: \"bg-sky-100 border-sky-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Blue\",\n    selected: \"bg-blue-200 border-blue-400\",\n    unselected: \"bg-blue-100 border-blue-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Indigo\",\n    selected: \"bg-indigo-200 border-indigo-400\",\n    unselected: \"bg-indigo-100 border-indigo-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Violet\",\n    selected: \"bg-violet-200 border-violet-400\",\n    unselected: \"bg-violet-100 border-violet-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Purple\",\n    selected: \"bg-purple-200 border-purple-400\",\n    unselected: \"bg-purple-100 border-purple-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Fuchsia\",\n    selected: \"bg-fuchsia-200 border-fuchsia-400\",\n    unselected: \"bg-fuchsia-100 border-fuchsia-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Pink\",\n    selected: \"bg-pink-200 border-pink-400\",\n    unselected: \"bg-pink-100 border-pink-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Rose\",\n    selected: \"bg-rose-200 border-rose-400\",\n    unselected: \"bg-rose-100 border-rose-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }];\n\n  // State for selected subjects and sessions\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [selectedSessions, setSelectedSessions] = useState({});\n  const [subjectColors, setSubjectColors] = useState({});\n  const [showColorPicker, setShowColorPicker] = useState(null);\n  const [conflicts, setConflicts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  // For storing collapsed state of subject panels\n  const [collapsedSubjects, setCollapsedSubjects] = useState({});\n  const fileInputRef = useRef(null);\n  const timetableRef = useRef(null);\n\n  // Toggle collapsed state for a subject\n  const toggleSubjectCollapse = subjectCode => {\n    setCollapsedSubjects(prev => ({\n      ...prev,\n      [subjectCode]: !prev[subjectCode]\n    }));\n  };\n\n  // Get available subjects (those not already selected)\n  const availableSubjects = courseData.subjects.filter(subject => !selectedSubjects.find(s => s.code === subject.code)).filter(subject => searchTerm === '' || subject.code.toLowerCase().includes(searchTerm.toLowerCase()) || subject.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Add a subject to the selection with a random color\n  const addSubject = subjectCode => {\n    const subject = courseData.subjects.find(s => s.code === subjectCode);\n    if (subject) {\n      // Assign a random color from color options\n      const randomIndex = Math.floor(Math.random() * colorOptions.length);\n      const randomColor = colorOptions[randomIndex];\n      setSelectedSubjects([...selectedSubjects, subject]);\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: randomColor\n      }));\n    }\n  };\n\n  // Change the color of a subject\n  const changeSubjectColor = (subjectCode, colorName) => {\n    const selectedColor = colorOptions.find(color => color.name === colorName);\n    if (selectedColor) {\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: selectedColor\n      }));\n      setShowColorPicker(null);\n    }\n  };\n\n  // Remove a subject from the selection\n  const removeSubject = subjectCode => {\n    setSelectedSubjects(selectedSubjects.filter(s => s.code !== subjectCode));\n\n    // Clear selected sessions for this subject\n    const newSelectedSessions = {\n      ...selectedSessions\n    };\n    Object.keys(newSelectedSessions).forEach(key => {\n      if (key.startsWith(subjectCode)) {\n        delete newSelectedSessions[key];\n      }\n    });\n    setSelectedSessions(newSelectedSessions);\n\n    // Remove the subject color\n    const newSubjectColors = {\n      ...subjectColors\n    };\n    delete newSubjectColors[subjectCode];\n    setSubjectColors(newSubjectColors);\n  };\n\n  // Select or unselect a session option for a component\n  const toggleSession = (subjectCode, componentName, optionId) => {\n    const sessionKey = `${subjectCode}-${componentName}`;\n    const isCurrentlySelected = selectedSessions[sessionKey] === optionId;\n\n    // Create a copy of current selections\n    const newSelectedSessions = {\n      ...selectedSessions\n    };\n    if (isCurrentlySelected) {\n      // If this option is already selected, unselect it\n      delete newSelectedSessions[sessionKey];\n    } else {\n      // If this option is not selected, select it and make any previous selection for this component unselected\n      newSelectedSessions[sessionKey] = optionId;\n    }\n\n    // Update the state\n    setSelectedSessions(newSelectedSessions);\n\n    // Check for conflicts\n    detectConflicts(newSelectedSessions);\n  };\n\n  // Check for time conflicts between selected sessions\n  const detectConflicts = selections => {\n    const sessions = [];\n\n    // Get all sessions from selections\n    Object.entries(selections).forEach(([key, optionId]) => {\n      const [subjectCode, componentName] = key.split('-');\n      const subject = selectedSubjects.find(s => s.code === subjectCode);\n      if (!subject) return;\n      const component = subject.components.find(c => c.name === componentName);\n      if (!component) return;\n      const option = component.options.find(o => o.id === optionId);\n      if (!option) return;\n      option.sessions.forEach(session => {\n        sessions.push({\n          id: `${optionId}-${session.day}-${session.startTime}`,\n          subjectCode,\n          day: session.day,\n          startTime: session.startTime,\n          endTime: session.endTime,\n          ...session\n        });\n      });\n    });\n\n    // Detect conflicts\n    const newConflicts = [];\n    for (let i = 0; i < sessions.length; i++) {\n      for (let j = i + 1; j < sessions.length; j++) {\n        const sessionA = sessions[i];\n        const sessionB = sessions[j];\n        if (sessionA.day === sessionB.day) {\n          // Check for time overlap\n          const startA = timeToMinutes(sessionA.startTime);\n          const endA = timeToMinutes(sessionA.endTime);\n          const startB = timeToMinutes(sessionB.startTime);\n          const endB = timeToMinutes(sessionB.endTime);\n          if (startA <= startB && endA > startB || startB <= startA && endB > startA) {\n            newConflicts.push([sessionA.id, sessionB.id]);\n          }\n        }\n      }\n    }\n    setConflicts(newConflicts);\n  };\n\n  // Helper function to convert time to minutes for comparison\n  const timeToMinutes = timeStr => {\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n\n  // Get all sessions to display in the timetable\n  const getAllSessions = () => {\n    // Array to store all sessions\n    const allSessions = [];\n\n    // Collect sessions, but skip unselected options when there's a selected option for that component\n    selectedSubjects.forEach(subject => {\n      subject.components.forEach(component => {\n        // Check if any option is already selected for this component\n        const componentKey = `${subject.code}-${component.name}`;\n        const hasSelectedOption = selectedSessions[componentKey] !== undefined;\n        component.options.forEach(option => {\n          const isSelected = selectedSessions[componentKey] === option.id;\n\n          // Only include this option if it's selected OR if no option has been selected for this component\n          if (isSelected || !hasSelectedOption) {\n            option.sessions.forEach(session => {\n              allSessions.push({\n                id: `${option.id}-${session.day}-${session.startTime}`,\n                subjectCode: subject.code,\n                componentName: component.name,\n                optionId: option.id,\n                selected: isSelected,\n                day: session.day,\n                startTime: session.startTime,\n                endTime: session.endTime,\n                location: session.location,\n                instructor: session.instructor,\n                type: session.type\n              });\n            });\n          }\n        });\n      });\n    });\n\n    // Group all sessions by day and time slot to find overlaps\n    // We'll create a map of day -> time slot -> sessions\n    const timeOverlapsByDay = {};\n\n    // Initialize for each day\n    days.forEach(day => {\n      timeOverlapsByDay[day] = {};\n    });\n\n    // Process each session to find time-based overlaps\n    allSessions.forEach(session => {\n      const day = session.day;\n      const start = timeToMinutes(session.startTime);\n      const end = timeToMinutes(session.endTime);\n\n      // Create time slots for every 15 minutes\n      for (let time = start; time < end; time += 15) {\n        const timeKey = `${time}`; // Use minutes as key\n\n        if (!timeOverlapsByDay[day][timeKey]) {\n          timeOverlapsByDay[day][timeKey] = [];\n        }\n\n        // Add this session to this time slot\n        timeOverlapsByDay[day][timeKey].push(session);\n      }\n    });\n\n    // Now process each session to mark overlaps and assign positions\n    allSessions.forEach(session => {\n      const day = session.day;\n      const start = timeToMinutes(session.startTime);\n      const end = timeToMinutes(session.endTime);\n\n      // Find all sessions that overlap with this one at any point\n      const overlappingSessions = new Set();\n\n      // Check each time slot this session occupies\n      for (let time = start; time < end; time += 15) {\n        const timeKey = `${time}`;\n        const sessionsInSlot = timeOverlapsByDay[day][timeKey] || [];\n\n        // Add all other sessions in this slot to the overlapping set\n        sessionsInSlot.forEach(otherSession => {\n          if (otherSession.id !== session.id) {\n            overlappingSessions.add(otherSession.id);\n          }\n        });\n      }\n\n      // Convert to array for easier processing\n      const overlaps = Array.from(overlappingSessions);\n      if (overlaps.length > 0) {\n        // This session overlaps with others\n\n        // Create an overlap group with this session and all overlapping sessions\n        const overlapGroup = [session.id, ...overlaps];\n\n        // Use session IDs to create a stable, sortable group\n        overlapGroup.sort();\n\n        // Find this session's position in the sorted group\n        const position = overlapGroup.indexOf(session.id);\n\n        // Set overlap properties\n        session.hasOverlap = true;\n        session.overlapCount = overlapGroup.length;\n        session.overlapIndex = position;\n\n        // If this session is selected, or any of its overlapping sessions are selected,\n        // mark it as a conflict for visual indication\n        const hasSelectedOverlap = allSessions.some(s => overlaps.includes(s.id) && s.selected);\n        session.potentialConflict = session.selected || hasSelectedOverlap;\n      } else {\n        // No overlaps\n        session.hasOverlap = false;\n        session.overlapCount = 1;\n        session.overlapIndex = 0;\n        session.potentialConflict = false;\n      }\n    });\n    return allSessions;\n  };\n\n  // Ensure timetable measurements are updated when window resizes\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render to recalculate positions\n      setSelectedSubjects([...selectedSubjects]);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [selectedSubjects]);\n\n  // Check if a session has a conflict\n  const hasConflict = sessionId => {\n    return conflicts.some(conflict => conflict[0] === sessionId || conflict[1] === sessionId);\n  };\n\n  // Export timetable as JSON\n  const exportJson = () => {\n    if (selectedSubjects.length === 0) {\n      showNotification('Please select at least one subject before exporting', 'warning');\n      return;\n    }\n    const data = {\n      selectedSubjects: selectedSubjects.map(s => s.code),\n      selectedSessions,\n      subjectColors\n    };\n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'timetable.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    showNotification('Timetable exported successfully!', 'success');\n  };\n\n  // Import timetable from JSON\n  const importJson = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsLoading(true);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const data = JSON.parse(e.target.result);\n\n        // Reset current selections\n        setSelectedSubjects([]);\n        setSelectedSessions({});\n\n        // Add subjects\n        const subjectPromises = data.selectedSubjects.map(code => {\n          const subject = courseData.subjects.find(s => s.code === code);\n          return subject;\n        }).filter(Boolean);\n        setSelectedSubjects(subjectPromises);\n\n        // Set selected sessions\n        setSelectedSessions(data.selectedSessions);\n\n        // Import subject colors if available\n        if (data.subjectColors) {\n          setSubjectColors(data.subjectColors);\n        } else {\n          // Generate colors for subjects if not included in the import\n          const newSubjectColors = {};\n          data.selectedSubjects.forEach(code => {\n            const randomIndex = Math.floor(Math.random() * colorOptions.length);\n            newSubjectColors[code] = colorOptions[randomIndex];\n          });\n          setSubjectColors(newSubjectColors);\n        }\n\n        // Check for conflicts\n        setTimeout(() => {\n          detectConflicts(data.selectedSessions);\n          setIsLoading(false);\n          showNotification('Timetable imported successfully!', 'success');\n        }, 100);\n      } catch (error) {\n        console.error('Error importing timetable:', error);\n        setIsLoading(false);\n        showNotification('Error importing timetable. Please check the file format.', 'error');\n      }\n    };\n    reader.readAsText(file);\n\n    // Reset file input\n    event.target.value = '';\n  };\n\n  // Export timetable as image\n  const exportImage = () => {\n    if (!timetableRef.current) return;\n    html2canvas(timetableRef.current).then(canvas => {\n      const image = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = 'timetable.png';\n      link.click();\n    });\n  };\n\n  // Show notification\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Get calendar time slots\n  const timeSlots = [];\n  for (let hour = 8; hour < 21; hour++) {\n    for (let minute of [0, 30]) {\n      if (hour === 8 && minute === 0) continue; // Start at 8:30\n      if (hour === 20 && minute === 30) continue; // End at 20:30\n\n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      timeSlots.push(time);\n    }\n  }\n\n  // Days of the week\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n  // Calculate session position and height in the timetable grid\n  const getSessionStyle = session => {\n    const startMinutes = timeToMinutes(session.startTime);\n    const endMinutes = timeToMinutes(session.endTime);\n    const duration = endMinutes - startMinutes;\n\n    // 8:30 starts at 0\n    const startFromFirstSlot = startMinutes - timeToMinutes('08:30');\n\n    // Each 30 minutes is 60px high\n    const top = startFromFirstSlot / 30 * 60;\n    const height = duration / 30 * 60;\n    return {\n      top: `${top}px`,\n      height: `${height}px`\n    };\n  };\n\n  // Determine session card color based on subject and selection status\n  const getSessionColor = session => {\n    // Always use the subject's color - don't change for conflicts\n    const subjectColor = subjectColors[session.subjectCode] || colorOptions[0];\n\n    // Use subject-specific colors rather than warning colors\n    if (session.selected) {\n      return subjectColor.selected; // Selected sessions use vibrant color\n    } else {\n      return subjectColor.unselected; // Unselected sessions use muted color\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen bg-gray-100\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed top-4 right-4 p-3 rounded shadow-lg z-50 ${notification.type === 'success' ? 'bg-green-500 text-white' : notification.type === 'error' ? 'bg-red-500 text-white' : notification.type === 'warning' ? 'bg-yellow-500 text-white' : 'bg-blue-500 text-white'}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-700 text-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex flex-col sm:flex-row justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-2 sm:mb-0\",\n          children: \"University Timetable Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-2 flex flex-wrap justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportJson,\n            className: \"bg-white text-blue-700 px-3 py-1 rounded mb-2 sm:mb-0\",\n            disabled: isLoading,\n            children: \"Export JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportImage,\n            className: \"bg-white text-blue-700 px-3 py-1 rounded\",\n            disabled: isLoading,\n            children: \"Export Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            className: \"hidden\",\n            ref: fileInputRef,\n            onChange: importJson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            className: \"bg-white text-blue-700 px-3 py-1 rounded\",\n            disabled: isLoading,\n            children: \"Import JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 flex flex-col lg:flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 bg-white p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Subject Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Search Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-grow p-2 border rounded-l\",\n              placeholder: \"Search by code or name\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-200 px-3 rounded-r border-t border-r border-b\",\n              onClick: () => setSearchTerm(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-60 overflow-y-auto border rounded\",\n            children: availableSubjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-2 text-gray-500\",\n              children: \"No subjects found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this) : availableSubjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 hover:bg-blue-50 cursor-pointer border-b flex justify-between items-center\",\n              onClick: () => addSubject(subject.code),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: subject.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm\",\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-blue-600 text-sm\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this)]\n            }, subject.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold mb-2\",\n            children: \"Selected Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), selectedSubjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"No subjects selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: selectedSubjects.map(subject => {\n              var _subjectColors$subjec;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-3 rounded bg-gray-50 hover:bg-gray-100 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center cursor-pointer\",\n                  onClick: () => toggleSubjectCollapse(subject.code),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `w-6 h-6 mr-2 rounded ${((_subjectColors$subjec = subjectColors[subject.code]) === null || _subjectColors$subjec === void 0 ? void 0 : _subjectColors$subjec.selected) || 'bg-gray-300'}`,\n                      onClick: e => {\n                        e.stopPropagation(); // Prevent triggering collapse\n                        setShowColorPicker(showColorPicker === subject.code ? null : subject.code);\n                      },\n                      title: \"Change color\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-bold\",\n                      children: [subject.code, \" - \", subject.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                      className: `ml-2 h-5 w-5 text-gray-500 transform transition-transform ${collapsedSubjects[subject.code] ? '' : 'rotate-90'}`,\n                      fill: \"currentColor\",\n                      viewBox: \"0 0 20 20\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        fillRule: \"evenodd\",\n                        d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",\n                        clipRule: \"evenodd\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 624,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation(); // Prevent triggering collapse\n                      removeSubject(subject.code);\n                    },\n                    className: \"text-red-500 hover:text-red-700 p-1 rounded hover:bg-red-50\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 21\n                }, this), !collapsedSubjects[subject.code] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [showColorPicker === subject.code && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white p-2 mb-3 border rounded shadow-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm font-semibold mb-2\",\n                      children: \"Select color:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-6 gap-1\",\n                      children: colorOptions.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `w-6 h-6 rounded ${color.selected} cursor-pointer hover:scale-110 transition-transform`,\n                        onClick: () => changeSubjectColor(subject.code, color.name),\n                        title: color.name\n                      }, color.name, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 27\n                  }, this), subject.components.map(component => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"font-semibold border-b pb-1 mb-2\",\n                      children: [component.name, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pl-4\",\n                      children: component.options.map(option => {\n                        const firstSession = option.sessions[0];\n                        const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n\n                        // Check if this option has any conflicts\n                        const hasSessionConflict = option.sessions.some(session => {\n                          const sessionId = `${option.id}-${session.day}-${session.startTime}`;\n                          return hasConflict(sessionId);\n                        });\n\n                        // Get subject color\n                        const optionColor = subjectColors[subject.code] || colorOptions[0];\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `flex items-center space-x-2 my-1 p-1 rounded relative ${isSelected ? optionColor.selected : ''}`,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: option.id,\n                            checked: isSelected,\n                            onChange: () => toggleSession(subject.code, component.name, option.id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 683,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: option.id,\n                            className: \"text-sm flex flex-col\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: [firstSession.day, \" \", firstSession.startTime, \"-\", firstSession.endTime]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 690,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-xs text-gray-600\",\n                              children: firstSession.location\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 691,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-xs text-gray-600\",\n                              children: firstSession.instructor\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 692,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 689,\n                            columnNumber: 37\n                          }, this), option.sessions.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs bg-yellow-100 px-1 rounded\",\n                            children: [\"+\", option.sessions.length - 1, \" more\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 695,\n                            columnNumber: 39\n                          }, this), hasSessionConflict && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: isSelected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"ml-1 inline-flex items-center justify-center bg-red-500 text-white rounded-full h-4 w-4 text-xs font-bold\",\n                              children: \"!\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 702,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"ml-1 inline-flex items-center justify-center bg-yellow-500 text-white rounded-full h-4 w-4 text-xs font-bold\",\n                              children: \"!\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 704,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false)]\n                        }, option.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 677,\n                          columnNumber: 35\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${subject.code}-${component.name}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 23\n                }, this)]\n              }, subject.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-2/3 bg-white p-4 rounded shadow overflow-x-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Weekly Timetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: timetableRef,\n          className: \"relative\",\n          style: {\n            minWidth: \"800px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20 font-bold p-2 border-r\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 flex\",\n              children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 font-bold p-2 text-center border-r\",\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [timeSlots.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                height: \"60px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-20 p-2 text-xs border-r\",\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 flex\",\n                children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 border-r relative\",\n                  style: {\n                    height: \"100%\"\n                  }\n                }, `${day}-${time}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 19\n              }, this)]\n            }, time, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this)), getAllSessions().map(session => {\n              const dayIndex = days.indexOf(session.day);\n              if (dayIndex === -1) return null;\n              const style = getSessionStyle(session);\n              const colorClass = getSessionColor(session);\n\n              // Calculate position for the current day column\n              // First get the width of the time column (w-20 = 5rem = 80px)\n              const timeColumnWidth = 80;\n\n              // Get the timetable container width\n              const timetableContainer = timetableRef.current;\n              const containerWidth = (timetableContainer === null || timetableContainer === void 0 ? void 0 : timetableContainer.clientWidth) || 800;\n\n              // Calculate the total available width for day columns\n              const totalWidth = containerWidth - timeColumnWidth;\n              const dayColumnWidth = totalWidth / days.length;\n\n              // Basic column calculations\n              const dayColWidth = totalWidth / days.length;\n              const availableWidth = dayColWidth - 4; // Subtract some margin\n\n              // Initialize position values\n              let cardWidth = availableWidth;\n              let offsetX = 0;\n\n              // All sessions with overlaps get divided width, whether selected or not\n              if (session.hasOverlap) {\n                // Divide the column width by number of overlapping sessions\n                cardWidth = availableWidth / session.overlapCount;\n\n                // Position this card based on its index in the overlap group\n                offsetX = cardWidth * session.overlapIndex;\n\n                // Log for debugging\n                console.log(`Session: ${session.subjectCode} (${session.day} ${session.startTime}-${session.endTime})`, {\n                  overlaps: session.overlapCount,\n                  position: session.overlapIndex,\n                  width: cardWidth.toFixed(1),\n                  offset: offsetX.toFixed(1)\n                });\n              }\n\n              // Final position calculation\n              const leftPosition = timeColumnWidth + dayIndex * dayColWidth + offsetX;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `absolute border-2 p-1 overflow-hidden text-xs rounded shadow-sm hover:shadow-md transition-shadow ${colorClass} cursor-pointer`,\n                style: {\n                  ...style,\n                  left: `${leftPosition}px`,\n                  width: `${cardWidth}px`,\n                  boxSizing: 'border-box',\n                  zIndex: session.selected ? 2 : 1,\n                  border: session.selected && session.hasOverlap ? '2px solid black' : undefined,\n                  opacity: session.selected ? 1 : 0.7,\n                  cursor: 'pointer'\n                },\n                onClick: () => toggleSession(session.subjectCode, session.componentName, session.optionId),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: session.subjectCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-semibold\",\n                  children: session.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs\",\n                  children: [session.startTime, \"-\", session.endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs truncate\",\n                  children: session.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs truncate italic\",\n                  children: session.instructor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 21\n                }, this), session.potentialConflict && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [session.selected && hasConflict(session.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute top-0 right-0 w-5 h-5 flex items-center justify-center bg-red-500 text-white rounded-full text-xs font-bold border-2 border-white shadow-md\",\n                    children: \"!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 27\n                  }, this), (!session.selected || !hasConflict(session.id)) && session.potentialConflict && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute top-0 right-0 w-5 h-5 flex items-center justify-center bg-yellow-500 text-white rounded-full text-xs font-bold border-2 border-white shadow-md\",\n                    children: \"!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute inset-0 border-2 border-red-400 rounded pointer-events-none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)]\n              }, session.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), conflicts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: [\"Warning: Your schedule has \", conflicts.length, \" time conflicts. Please resolve them.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DtktRdTP/CMngBBdj/uiVkSfWNU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","courseData","html2canvas","_","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","colorOptions","name","selected","unselected","conflict","selectedSubjects","setSelectedSubjects","selectedSessions","setSelectedSessions","subjectColors","setSubjectColors","showColorPicker","setShowColorPicker","conflicts","setConflicts","searchTerm","setSearchTerm","isLoading","setIsLoading","notification","setNotification","collapsedSubjects","setCollapsedSubjects","fileInputRef","timetableRef","toggleSubjectCollapse","subjectCode","prev","availableSubjects","subjects","filter","subject","find","s","code","toLowerCase","includes","addSubject","randomIndex","Math","floor","random","length","randomColor","changeSubjectColor","colorName","selectedColor","color","removeSubject","newSelectedSessions","Object","keys","forEach","key","startsWith","newSubjectColors","toggleSession","componentName","optionId","sessionKey","isCurrentlySelected","detectConflicts","selections","sessions","entries","split","component","components","c","option","options","o","id","session","push","day","startTime","endTime","newConflicts","i","j","sessionA","sessionB","startA","timeToMinutes","endA","startB","endB","timeStr","hours","minutes","map","Number","getAllSessions","allSessions","componentKey","hasSelectedOption","undefined","isSelected","location","instructor","type","timeOverlapsByDay","days","start","end","time","timeKey","overlappingSessions","Set","sessionsInSlot","otherSession","add","overlaps","Array","from","overlapGroup","sort","position","indexOf","hasOverlap","overlapCount","overlapIndex","hasSelectedOverlap","some","potentialConflict","handleResize","window","addEventListener","removeEventListener","hasConflict","sessionId","exportJson","showNotification","data","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importJson","event","file","target","files","reader","FileReader","onload","e","parse","result","subjectPromises","Boolean","setTimeout","error","console","readAsText","value","exportImage","current","then","canvas","image","toDataURL","link","href","download","message","timeSlots","hour","minute","toString","padStart","getSessionStyle","startMinutes","endMinutes","duration","startFromFirstSlot","top","height","getSessionColor","subjectColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","accept","ref","onChange","placeholder","_subjectColors$subjec","stopPropagation","title","fill","viewBox","fillRule","d","clipRule","firstSession","hasSessionConflict","optionColor","checked","htmlFor","style","minWidth","index","dayIndex","colorClass","timeColumnWidth","timetableContainer","containerWidth","clientWidth","totalWidth","dayColumnWidth","dayColWidth","availableWidth","cardWidth","offsetX","log","width","toFixed","offset","leftPosition","left","boxSizing","zIndex","border","opacity","cursor","_c","$RefreshReg$"],"sources":["/home/ubuntu/projects/timetable-chooser/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { courseData } from './data/courseData';\nimport html2canvas from 'html2canvas';\nimport _ from 'lodash';\n\nfunction App() {\n  // Predefined muted color options\n  const colorOptions = [\n    { name: \"Slate\", selected: \"bg-slate-300 border-slate-500\", unselected: \"bg-slate-200 border-slate-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Gray\", selected: \"bg-gray-300 border-gray-500\", unselected: \"bg-gray-200 border-gray-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Zinc\", selected: \"bg-zinc-300 border-zinc-500\", unselected: \"bg-zinc-200 border-zinc-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Stone\", selected: \"bg-stone-300 border-stone-500\", unselected: \"bg-stone-200 border-stone-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Red\", selected: \"bg-red-200 border-red-400\", unselected: \"bg-red-100 border-red-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Orange\", selected: \"bg-orange-200 border-orange-400\", unselected: \"bg-orange-100 border-orange-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Amber\", selected: \"bg-amber-200 border-amber-400\", unselected: \"bg-amber-100 border-amber-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Yellow\", selected: \"bg-yellow-200 border-yellow-400\", unselected: \"bg-yellow-100 border-yellow-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Lime\", selected: \"bg-lime-200 border-lime-400\", unselected: \"bg-lime-100 border-lime-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Green\", selected: \"bg-green-200 border-green-400\", unselected: \"bg-green-100 border-green-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Emerald\", selected: \"bg-emerald-200 border-emerald-400\", unselected: \"bg-emerald-100 border-emerald-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Teal\", selected: \"bg-teal-200 border-teal-400\", unselected: \"bg-teal-100 border-teal-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Cyan\", selected: \"bg-cyan-200 border-cyan-400\", unselected: \"bg-cyan-100 border-cyan-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Sky\", selected: \"bg-sky-200 border-sky-400\", unselected: \"bg-sky-100 border-sky-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Blue\", selected: \"bg-blue-200 border-blue-400\", unselected: \"bg-blue-100 border-blue-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Indigo\", selected: \"bg-indigo-200 border-indigo-400\", unselected: \"bg-indigo-100 border-indigo-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Violet\", selected: \"bg-violet-200 border-violet-400\", unselected: \"bg-violet-100 border-violet-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Purple\", selected: \"bg-purple-200 border-purple-400\", unselected: \"bg-purple-100 border-purple-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Fuchsia\", selected: \"bg-fuchsia-200 border-fuchsia-400\", unselected: \"bg-fuchsia-100 border-fuchsia-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Pink\", selected: \"bg-pink-200 border-pink-400\", unselected: \"bg-pink-100 border-pink-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Rose\", selected: \"bg-rose-200 border-rose-400\", unselected: \"bg-rose-100 border-rose-300\", conflict: \"bg-red-300 border-red-500\" }\n  ];\n\n  // State for selected subjects and sessions\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [selectedSessions, setSelectedSessions] = useState({});\n  const [subjectColors, setSubjectColors] = useState({});\n  const [showColorPicker, setShowColorPicker] = useState(null);\n  const [conflicts, setConflicts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  // For storing collapsed state of subject panels\n  const [collapsedSubjects, setCollapsedSubjects] = useState({});\n  const fileInputRef = useRef(null);\n  const timetableRef = useRef(null);\n  \n  // Toggle collapsed state for a subject\n  const toggleSubjectCollapse = (subjectCode) => {\n    setCollapsedSubjects(prev => ({\n      ...prev,\n      [subjectCode]: !prev[subjectCode]\n    }));\n  };\n\n  // Get available subjects (those not already selected)\n  const availableSubjects = courseData.subjects\n    .filter(subject => !selectedSubjects.find(s => s.code === subject.code))\n    .filter(subject => \n      searchTerm === '' || \n      subject.code.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      subject.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n  // Add a subject to the selection with a random color\n  const addSubject = (subjectCode) => {\n    const subject = courseData.subjects.find(s => s.code === subjectCode);\n    if (subject) {\n      // Assign a random color from color options\n      const randomIndex = Math.floor(Math.random() * colorOptions.length);\n      const randomColor = colorOptions[randomIndex];\n      \n      setSelectedSubjects([...selectedSubjects, subject]);\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: randomColor\n      }));\n    }\n  };\n  \n  // Change the color of a subject\n  const changeSubjectColor = (subjectCode, colorName) => {\n    const selectedColor = colorOptions.find(color => color.name === colorName);\n    if (selectedColor) {\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: selectedColor\n      }));\n      setShowColorPicker(null);\n    }\n  };\n\n  // Remove a subject from the selection\n  const removeSubject = (subjectCode) => {\n    setSelectedSubjects(selectedSubjects.filter(s => s.code !== subjectCode));\n    \n    // Clear selected sessions for this subject\n    const newSelectedSessions = {...selectedSessions};\n    Object.keys(newSelectedSessions).forEach(key => {\n      if (key.startsWith(subjectCode)) {\n        delete newSelectedSessions[key];\n      }\n    });\n    setSelectedSessions(newSelectedSessions);\n    \n    // Remove the subject color\n    const newSubjectColors = {...subjectColors};\n    delete newSubjectColors[subjectCode];\n    setSubjectColors(newSubjectColors);\n  };\n\n  // Select or unselect a session option for a component\n  const toggleSession = (subjectCode, componentName, optionId) => {\n    const sessionKey = `${subjectCode}-${componentName}`;\n    const isCurrentlySelected = selectedSessions[sessionKey] === optionId;\n    \n    // Create a copy of current selections\n    const newSelectedSessions = { ...selectedSessions };\n    \n    if (isCurrentlySelected) {\n      // If this option is already selected, unselect it\n      delete newSelectedSessions[sessionKey];\n    } else {\n      // If this option is not selected, select it and make any previous selection for this component unselected\n      newSelectedSessions[sessionKey] = optionId;\n    }\n    \n    // Update the state\n    setSelectedSessions(newSelectedSessions);\n    \n    // Check for conflicts\n    detectConflicts(newSelectedSessions);\n  };\n\n  // Check for time conflicts between selected sessions\n  const detectConflicts = (selections) => {\n    const sessions = [];\n    \n    // Get all sessions from selections\n    Object.entries(selections).forEach(([key, optionId]) => {\n      const [subjectCode, componentName] = key.split('-');\n      const subject = selectedSubjects.find(s => s.code === subjectCode);\n      if (!subject) return;\n      \n      const component = subject.components.find(c => c.name === componentName);\n      if (!component) return;\n      \n      const option = component.options.find(o => o.id === optionId);\n      if (!option) return;\n      \n      option.sessions.forEach(session => {\n        sessions.push({\n          id: `${optionId}-${session.day}-${session.startTime}`,\n          subjectCode,\n          day: session.day,\n          startTime: session.startTime,\n          endTime: session.endTime,\n          ...session\n        });\n      });\n    });\n    \n    // Detect conflicts\n    const newConflicts = [];\n    for (let i = 0; i < sessions.length; i++) {\n      for (let j = i + 1; j < sessions.length; j++) {\n        const sessionA = sessions[i];\n        const sessionB = sessions[j];\n        \n        if (sessionA.day === sessionB.day) {\n          // Check for time overlap\n          const startA = timeToMinutes(sessionA.startTime);\n          const endA = timeToMinutes(sessionA.endTime);\n          const startB = timeToMinutes(sessionB.startTime);\n          const endB = timeToMinutes(sessionB.endTime);\n          \n          if ((startA <= startB && endA > startB) || \n              (startB <= startA && endB > startA)) {\n            newConflicts.push([sessionA.id, sessionB.id]);\n          }\n        }\n      }\n    }\n    \n    setConflicts(newConflicts);\n  };\n\n  // Helper function to convert time to minutes for comparison\n  const timeToMinutes = (timeStr) => {\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n\n  // Get all sessions to display in the timetable\n  const getAllSessions = () => {\n    // Array to store all sessions\n    const allSessions = [];\n    \n    // Collect sessions, but skip unselected options when there's a selected option for that component\n    selectedSubjects.forEach(subject => {\n      subject.components.forEach(component => {\n        // Check if any option is already selected for this component\n        const componentKey = `${subject.code}-${component.name}`;\n        const hasSelectedOption = selectedSessions[componentKey] !== undefined;\n        \n        component.options.forEach(option => {\n          const isSelected = selectedSessions[componentKey] === option.id;\n          \n          // Only include this option if it's selected OR if no option has been selected for this component\n          if (isSelected || !hasSelectedOption) {\n            option.sessions.forEach(session => {\n              allSessions.push({\n                id: `${option.id}-${session.day}-${session.startTime}`,\n                subjectCode: subject.code,\n                componentName: component.name,\n                optionId: option.id,\n                selected: isSelected,\n                day: session.day,\n                startTime: session.startTime,\n                endTime: session.endTime,\n                location: session.location,\n                instructor: session.instructor,\n                type: session.type\n              });\n            });\n          }\n        });\n      });\n    });\n    \n    // Group all sessions by day and time slot to find overlaps\n    // We'll create a map of day -> time slot -> sessions\n    const timeOverlapsByDay = {};\n    \n    // Initialize for each day\n    days.forEach(day => {\n      timeOverlapsByDay[day] = {};\n    });\n    \n    // Process each session to find time-based overlaps\n    allSessions.forEach(session => {\n      const day = session.day;\n      const start = timeToMinutes(session.startTime);\n      const end = timeToMinutes(session.endTime);\n      \n      // Create time slots for every 15 minutes\n      for (let time = start; time < end; time += 15) {\n        const timeKey = `${time}`; // Use minutes as key\n        \n        if (!timeOverlapsByDay[day][timeKey]) {\n          timeOverlapsByDay[day][timeKey] = [];\n        }\n        \n        // Add this session to this time slot\n        timeOverlapsByDay[day][timeKey].push(session);\n      }\n    });\n    \n    // Now process each session to mark overlaps and assign positions\n    allSessions.forEach(session => {\n      const day = session.day;\n      const start = timeToMinutes(session.startTime);\n      const end = timeToMinutes(session.endTime);\n      \n      // Find all sessions that overlap with this one at any point\n      const overlappingSessions = new Set();\n      \n      // Check each time slot this session occupies\n      for (let time = start; time < end; time += 15) {\n        const timeKey = `${time}`;\n        const sessionsInSlot = timeOverlapsByDay[day][timeKey] || [];\n        \n        // Add all other sessions in this slot to the overlapping set\n        sessionsInSlot.forEach(otherSession => {\n          if (otherSession.id !== session.id) {\n            overlappingSessions.add(otherSession.id);\n          }\n        });\n      }\n      \n      // Convert to array for easier processing\n      const overlaps = Array.from(overlappingSessions);\n      \n      if (overlaps.length > 0) {\n        // This session overlaps with others\n        \n        // Create an overlap group with this session and all overlapping sessions\n        const overlapGroup = [\n          session.id, \n          ...overlaps\n        ];\n        \n        // Use session IDs to create a stable, sortable group\n        overlapGroup.sort();\n        \n        // Find this session's position in the sorted group\n        const position = overlapGroup.indexOf(session.id);\n        \n        // Set overlap properties\n        session.hasOverlap = true;\n        session.overlapCount = overlapGroup.length;\n        session.overlapIndex = position;\n        \n        // If this session is selected, or any of its overlapping sessions are selected,\n        // mark it as a conflict for visual indication\n        const hasSelectedOverlap = allSessions.some(s => \n          overlaps.includes(s.id) && s.selected);\n          \n        session.potentialConflict = session.selected || hasSelectedOverlap;\n      } else {\n        // No overlaps\n        session.hasOverlap = false;\n        session.overlapCount = 1;\n        session.overlapIndex = 0;\n        session.potentialConflict = false;\n      }\n    });\n    \n    return allSessions;\n  };\n  \n  // Ensure timetable measurements are updated when window resizes\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render to recalculate positions\n      setSelectedSubjects([...selectedSubjects]);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [selectedSubjects]);\n\n  // Check if a session has a conflict\n  const hasConflict = (sessionId) => {\n    return conflicts.some(conflict => \n      conflict[0] === sessionId || conflict[1] === sessionId\n    );\n  };\n\n  // Export timetable as JSON\n  const exportJson = () => {\n    if (selectedSubjects.length === 0) {\n      showNotification('Please select at least one subject before exporting', 'warning');\n      return;\n    }\n    \n    const data = {\n      selectedSubjects: selectedSubjects.map(s => s.code),\n      selectedSessions,\n      subjectColors\n    };\n    \n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'timetable.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    \n    showNotification('Timetable exported successfully!', 'success');\n  };\n  \n  // Import timetable from JSON\n  const importJson = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setIsLoading(true);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        \n        // Reset current selections\n        setSelectedSubjects([]);\n        setSelectedSessions({});\n        \n        // Add subjects\n        const subjectPromises = data.selectedSubjects.map(code => {\n          const subject = courseData.subjects.find(s => s.code === code);\n          return subject;\n        }).filter(Boolean);\n        \n        setSelectedSubjects(subjectPromises);\n        \n        // Set selected sessions\n        setSelectedSessions(data.selectedSessions);\n        \n        // Import subject colors if available\n        if (data.subjectColors) {\n          setSubjectColors(data.subjectColors);\n        } else {\n          // Generate colors for subjects if not included in the import\n          const newSubjectColors = {};\n          data.selectedSubjects.forEach(code => {\n            const randomIndex = Math.floor(Math.random() * colorOptions.length);\n            newSubjectColors[code] = colorOptions[randomIndex];\n          });\n          setSubjectColors(newSubjectColors);\n        }\n        \n        // Check for conflicts\n        setTimeout(() => {\n          detectConflicts(data.selectedSessions);\n          setIsLoading(false);\n          showNotification('Timetable imported successfully!', 'success');\n        }, 100);\n      } catch (error) {\n        console.error('Error importing timetable:', error);\n        setIsLoading(false);\n        showNotification('Error importing timetable. Please check the file format.', 'error');\n      }\n    };\n    \n    reader.readAsText(file);\n    \n    // Reset file input\n    event.target.value = '';\n  };\n  \n  // Export timetable as image\n  const exportImage = () => {\n    if (!timetableRef.current) return;\n    \n    html2canvas(timetableRef.current).then(canvas => {\n      const image = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = 'timetable.png';\n      link.click();\n    });\n  };\n  \n  // Show notification\n  const showNotification = (message, type = 'info') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Get calendar time slots\n  const timeSlots = [];\n  for (let hour = 8; hour < 21; hour++) {\n    for (let minute of [0, 30]) {\n      if (hour === 8 && minute === 0) continue; // Start at 8:30\n      if (hour === 20 && minute === 30) continue; // End at 20:30\n      \n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      timeSlots.push(time);\n    }\n  }\n  \n  // Days of the week\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n  // Calculate session position and height in the timetable grid\n  const getSessionStyle = (session) => {\n    const startMinutes = timeToMinutes(session.startTime);\n    const endMinutes = timeToMinutes(session.endTime);\n    const duration = endMinutes - startMinutes;\n    \n    // 8:30 starts at 0\n    const startFromFirstSlot = startMinutes - timeToMinutes('08:30');\n    \n    // Each 30 minutes is 60px high\n    const top = (startFromFirstSlot / 30) * 60;\n    const height = (duration / 30) * 60;\n    \n    return {\n      top: `${top}px`,\n      height: `${height}px`\n    };\n  };\n\n  // Determine session card color based on subject and selection status\n  const getSessionColor = (session) => {\n    // Always use the subject's color - don't change for conflicts\n    const subjectColor = subjectColors[session.subjectCode] || colorOptions[0];\n    \n    // Use subject-specific colors rather than warning colors\n    if (session.selected) {\n      return subjectColor.selected; // Selected sessions use vibrant color\n    } else {\n      return subjectColor.unselected; // Unselected sessions use muted color\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\n      {/* Loading Overlay */}\n      {isLoading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-4 rounded shadow\">\n            <p className=\"text-lg\">Loading...</p>\n          </div>\n        </div>\n      )}\n      \n      {/* Notification */}\n      {notification && (\n        <div className={`fixed top-4 right-4 p-3 rounded shadow-lg z-50 ${\n          notification.type === 'success' ? 'bg-green-500 text-white' :\n          notification.type === 'error' ? 'bg-red-500 text-white' :\n          notification.type === 'warning' ? 'bg-yellow-500 text-white' :\n          'bg-blue-500 text-white'\n        }`}>\n          {notification.message}\n        </div>\n      )}\n      \n      {/* Header */}\n      <header className=\"bg-blue-700 text-white p-4\">\n        <div className=\"container mx-auto flex flex-col sm:flex-row justify-between items-center\">\n          <h1 className=\"text-2xl font-bold mb-2 sm:mb-0\">University Timetable Scheduler</h1>\n          <div className=\"space-x-2 flex flex-wrap justify-center\">\n            <button \n              onClick={exportJson}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded mb-2 sm:mb-0\"\n              disabled={isLoading}\n            >\n              Export JSON\n            </button>\n            <button \n              onClick={exportImage}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded\"\n              disabled={isLoading}\n            >\n              Export Image\n            </button>\n            <input\n              type=\"file\"\n              accept=\".json\"\n              className=\"hidden\"\n              ref={fileInputRef}\n              onChange={importJson}\n            />\n            <button \n              onClick={() => fileInputRef.current.click()}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded\"\n              disabled={isLoading}\n            >\n              Import JSON\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container mx-auto p-4 flex flex-col lg:flex-row gap-4\">\n        {/* Subject Selection Panel */}\n        <div className=\"w-full lg:w-1/3 bg-white p-4 rounded shadow\">\n          <h2 className=\"text-xl font-bold mb-4\">Subject Selection</h2>\n          \n          {/* Search and Add Subject */}\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Search Subjects:</label>\n            <div className=\"flex mb-2\">\n              <input \n                type=\"text\" \n                className=\"flex-grow p-2 border rounded-l\"\n                placeholder=\"Search by code or name\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n              <button \n                className=\"bg-gray-200 px-3 rounded-r border-t border-r border-b\"\n                onClick={() => setSearchTerm('')}\n              >\n                Clear\n              </button>\n            </div>\n            \n            <div className=\"max-h-60 overflow-y-auto border rounded\">\n              {availableSubjects.length === 0 ? (\n                <p className=\"p-2 text-gray-500\">No subjects found</p>\n              ) : (\n                availableSubjects.map(subject => (\n                  <div \n                    key={subject.code} \n                    className=\"p-2 hover:bg-blue-50 cursor-pointer border-b flex justify-between items-center\"\n                    onClick={() => addSubject(subject.code)}\n                  >\n                    <div>\n                      <div className=\"font-bold\">{subject.code}</div>\n                      <div className=\"text-sm\">{subject.name}</div>\n                    </div>\n                    <button className=\"text-blue-600 text-sm\">Add</button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          {/* Selected Subjects */}\n          <div>\n            <h3 className=\"font-bold mb-2\">Selected Subjects:</h3>\n            {selectedSubjects.length === 0 ? (\n              <p className=\"text-gray-500\">No subjects selected</p>\n            ) : (\n              <div className=\"space-y-4\">\n                {selectedSubjects.map(subject => (\n                  <div key={subject.code} className=\"border p-3 rounded bg-gray-50 hover:bg-gray-100 transition-colors\">\n                    <div \n                      className=\"flex justify-between items-center cursor-pointer\" \n                      onClick={() => toggleSubjectCollapse(subject.code)}\n                    >\n                      <div className=\"flex items-center\">\n                        <div \n                          className={`w-6 h-6 mr-2 rounded ${subjectColors[subject.code]?.selected || 'bg-gray-300'}`}\n                          onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering collapse\n                            setShowColorPicker(showColorPicker === subject.code ? null : subject.code);\n                          }}\n                          title=\"Change color\"\n                        ></div>\n                        <h4 className=\"font-bold\">{subject.code} - {subject.name}</h4>\n                        \n                        {/* Collapse/Expand indicator */}\n                        <svg \n                          className={`ml-2 h-5 w-5 text-gray-500 transform transition-transform ${collapsedSubjects[subject.code] ? '' : 'rotate-90'}`}\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                      <button \n                        onClick={(e) => {\n                          e.stopPropagation(); // Prevent triggering collapse\n                          removeSubject(subject.code);\n                        }}\n                        className=\"text-red-500 hover:text-red-700 p-1 rounded hover:bg-red-50\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                    \n                    {/* Only show content if not collapsed */}\n                    {!collapsedSubjects[subject.code] && (\n                      <div className=\"mt-2\">\n                        {/* Color picker dropdown */}\n                        {showColorPicker === subject.code && (\n                          <div className=\"bg-white p-2 mb-3 border rounded shadow-sm\">\n                            <div className=\"text-sm font-semibold mb-2\">Select color:</div>\n                            <div className=\"grid grid-cols-6 gap-1\">\n                              {colorOptions.map(color => (\n                                <div \n                                  key={color.name}\n                                  className={`w-6 h-6 rounded ${color.selected} cursor-pointer hover:scale-110 transition-transform`}\n                                  onClick={() => changeSubjectColor(subject.code, color.name)}\n                                  title={color.name}\n                                ></div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Component Selectors */}\n                        {subject.components.map(component => (\n                          <div key={`${subject.code}-${component.name}`} className=\"mb-3\">\n                            <h5 className=\"font-semibold border-b pb-1 mb-2\">{component.name}:</h5>\n                            <div className=\"pl-4\">\n                              {component.options.map(option => {\n                                const firstSession = option.sessions[0];\n                                const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n                                \n                                // Check if this option has any conflicts\n                                const hasSessionConflict = option.sessions.some(session => {\n                                  const sessionId = `${option.id}-${session.day}-${session.startTime}`;\n                                  return hasConflict(sessionId);\n                                });\n                                \n                                // Get subject color\n                                const optionColor = subjectColors[subject.code] || colorOptions[0];\n                                \n                                return (\n                                  <div \n                                    key={option.id} \n                                    className={`flex items-center space-x-2 my-1 p-1 rounded relative ${\n                                      isSelected ? optionColor.selected : ''\n                                    }`}\n                                  >\n                                    <input \n                                      type=\"checkbox\"\n                                      id={option.id}\n                                      checked={isSelected}\n                                      onChange={() => toggleSession(subject.code, component.name, option.id)}\n                                    />\n                                    <label htmlFor={option.id} className=\"text-sm flex flex-col\">\n                                      <span>{firstSession.day} {firstSession.startTime}-{firstSession.endTime}</span>\n                                      <span className=\"text-xs text-gray-600\">{firstSession.location}</span>\n                                      <span className=\"text-xs text-gray-600\">{firstSession.instructor}</span>\n                                    </label>\n                                    {option.sessions.length > 1 && (\n                                      <span className=\"text-xs bg-yellow-100 px-1 rounded\">+{option.sessions.length - 1} more</span>\n                                    )}\n                                    \n                                    {/* Conflict indicators */}\n                                    {hasSessionConflict && (\n                                      <>\n                                        {isSelected ? (\n                                          <span className=\"ml-1 inline-flex items-center justify-center bg-red-500 text-white rounded-full h-4 w-4 text-xs font-bold\">!</span>\n                                        ) : (\n                                          <span className=\"ml-1 inline-flex items-center justify-center bg-yellow-500 text-white rounded-full h-4 w-4 text-xs font-bold\">!</span>\n                                        )}\n                                      </>\n                                    )}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Timetable Grid */}\n        <div className=\"w-full lg:w-2/3 bg-white p-4 rounded shadow overflow-x-auto\">\n          <h2 className=\"text-xl font-bold mb-4\">Weekly Timetable</h2>\n          \n          <div ref={timetableRef} className=\"relative\" style={{ minWidth: \"800px\" }}>\n            {/* Day Headers */}\n            <div className=\"flex border-b\">\n              <div className=\"w-20 font-bold p-2 border-r\">Time</div>\n              <div className=\"flex-1 flex\">\n                {days.map(day => (\n                  <div key={day} className=\"flex-1 font-bold p-2 text-center border-r\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Time Slots */}\n            <div className=\"relative\">\n              {timeSlots.map((time, index) => (\n                <div key={time} className=\"flex border-b\" style={{ height: \"60px\" }}>\n                  <div className=\"w-20 p-2 text-xs border-r\">{time}</div>\n                  <div className=\"flex-1 flex\">\n                    {days.map(day => (\n                      <div \n                        key={`${day}-${time}`} \n                        className=\"flex-1 border-r relative\"\n                        style={{ height: \"100%\" }}\n                      ></div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Session Cards */}\n              {getAllSessions().map(session => {\n                const dayIndex = days.indexOf(session.day);\n                if (dayIndex === -1) return null;\n                \n                const style = getSessionStyle(session);\n                const colorClass = getSessionColor(session);\n                \n                // Calculate position for the current day column\n                // First get the width of the time column (w-20 = 5rem = 80px)\n                const timeColumnWidth = 80;\n                \n                // Get the timetable container width\n                const timetableContainer = timetableRef.current;\n                const containerWidth = timetableContainer?.clientWidth || 800;\n                \n                // Calculate the total available width for day columns\n                const totalWidth = containerWidth - timeColumnWidth;\n                const dayColumnWidth = totalWidth / days.length;\n                \n                // Basic column calculations\n                const dayColWidth = totalWidth / days.length;\n                const availableWidth = dayColWidth - 4; // Subtract some margin\n                \n                // Initialize position values\n                let cardWidth = availableWidth;\n                let offsetX = 0;\n                \n                // All sessions with overlaps get divided width, whether selected or not\n                if (session.hasOverlap) {\n                  // Divide the column width by number of overlapping sessions\n                  cardWidth = availableWidth / session.overlapCount;\n                  \n                  // Position this card based on its index in the overlap group\n                  offsetX = cardWidth * session.overlapIndex;\n                  \n                  // Log for debugging\n                  console.log(`Session: ${session.subjectCode} (${session.day} ${session.startTime}-${session.endTime})`, {\n                    overlaps: session.overlapCount,\n                    position: session.overlapIndex,\n                    width: cardWidth.toFixed(1),\n                    offset: offsetX.toFixed(1)\n                  });\n                }\n                \n                // Final position calculation\n                const leftPosition = timeColumnWidth + (dayIndex * dayColWidth) + offsetX;\n                \n                return (\n                  <div \n                    key={session.id}\n                    className={`absolute border-2 p-1 overflow-hidden text-xs rounded shadow-sm hover:shadow-md transition-shadow ${colorClass} cursor-pointer`}\n                    style={{\n                      ...style,\n                      left: `${leftPosition}px`,\n                      width: `${cardWidth}px`,\n                      boxSizing: 'border-box',\n                      zIndex: session.selected ? 2 : 1,\n                      border: session.selected && session.hasOverlap ? '2px solid black' : undefined,\n                      opacity: session.selected ? 1 : 0.7,\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => toggleSession(session.subjectCode, session.componentName, session.optionId)}\n                  >\n                    <div className=\"font-bold\">{session.subjectCode}</div>\n                    <div className=\"font-semibold\">{session.type}</div>\n                    <div className=\"text-xs\">{session.startTime}-{session.endTime}</div>\n                    <div className=\"text-xs truncate\">{session.location}</div>\n                    <div className=\"text-xs truncate italic\">{session.instructor}</div>\n                    {/* Show warning indicator for conflicts */}\n                    {session.potentialConflict && (\n                      <>\n                        {/* Red warning for selected sessions with conflicts */}\n                        {session.selected && hasConflict(session.id) && (\n                          <div className=\"absolute top-0 right-0 w-5 h-5 flex items-center justify-center bg-red-500 text-white rounded-full text-xs font-bold border-2 border-white shadow-md\">!</div>\n                        )}\n                        \n                        {/* Yellow warning for potential conflicts (when not selected) */}\n                        {(!session.selected || !hasConflict(session.id)) && session.potentialConflict && (\n                          <div className=\"absolute top-0 right-0 w-5 h-5 flex items-center justify-center bg-yellow-500 text-white rounded-full text-xs font-bold border-2 border-white shadow-md\">!</div>\n                        )}\n                        \n                        {/* Add a subtle border to indicate conflict potential */}\n                        <div className=\"absolute inset-0 border-2 border-red-400 rounded pointer-events-none\"></div>\n                      </>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          {/* Conflict Warning */}\n          {conflicts.length > 0 && (\n            <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n              Warning: Your schedule has {conflicts.length} time conflicts. Please resolve them.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}