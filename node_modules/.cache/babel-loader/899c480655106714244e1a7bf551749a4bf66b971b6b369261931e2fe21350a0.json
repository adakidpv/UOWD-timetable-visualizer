{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/projects/timetable-chooser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { courseData } from './data/courseData';\nimport html2canvas from 'html2canvas';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Predefined muted color options\n  const colorOptions = [{\n    name: \"Slate\",\n    selected: \"bg-slate-300 border-slate-500\",\n    unselected: \"bg-slate-200 border-slate-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Gray\",\n    selected: \"bg-gray-300 border-gray-500\",\n    unselected: \"bg-gray-200 border-gray-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Zinc\",\n    selected: \"bg-zinc-300 border-zinc-500\",\n    unselected: \"bg-zinc-200 border-zinc-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Stone\",\n    selected: \"bg-stone-300 border-stone-500\",\n    unselected: \"bg-stone-200 border-stone-400\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Red\",\n    selected: \"bg-red-200 border-red-400\",\n    unselected: \"bg-red-100 border-red-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Orange\",\n    selected: \"bg-orange-200 border-orange-400\",\n    unselected: \"bg-orange-100 border-orange-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Amber\",\n    selected: \"bg-amber-200 border-amber-400\",\n    unselected: \"bg-amber-100 border-amber-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Yellow\",\n    selected: \"bg-yellow-200 border-yellow-400\",\n    unselected: \"bg-yellow-100 border-yellow-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Lime\",\n    selected: \"bg-lime-200 border-lime-400\",\n    unselected: \"bg-lime-100 border-lime-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Green\",\n    selected: \"bg-green-200 border-green-400\",\n    unselected: \"bg-green-100 border-green-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Emerald\",\n    selected: \"bg-emerald-200 border-emerald-400\",\n    unselected: \"bg-emerald-100 border-emerald-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Teal\",\n    selected: \"bg-teal-200 border-teal-400\",\n    unselected: \"bg-teal-100 border-teal-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Cyan\",\n    selected: \"bg-cyan-200 border-cyan-400\",\n    unselected: \"bg-cyan-100 border-cyan-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Sky\",\n    selected: \"bg-sky-200 border-sky-400\",\n    unselected: \"bg-sky-100 border-sky-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Blue\",\n    selected: \"bg-blue-200 border-blue-400\",\n    unselected: \"bg-blue-100 border-blue-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Indigo\",\n    selected: \"bg-indigo-200 border-indigo-400\",\n    unselected: \"bg-indigo-100 border-indigo-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Violet\",\n    selected: \"bg-violet-200 border-violet-400\",\n    unselected: \"bg-violet-100 border-violet-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Purple\",\n    selected: \"bg-purple-200 border-purple-400\",\n    unselected: \"bg-purple-100 border-purple-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Fuchsia\",\n    selected: \"bg-fuchsia-200 border-fuchsia-400\",\n    unselected: \"bg-fuchsia-100 border-fuchsia-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Pink\",\n    selected: \"bg-pink-200 border-pink-400\",\n    unselected: \"bg-pink-100 border-pink-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }, {\n    name: \"Rose\",\n    selected: \"bg-rose-200 border-rose-400\",\n    unselected: \"bg-rose-100 border-rose-300\",\n    conflict: \"bg-red-300 border-red-500\"\n  }];\n\n  // State for selected subjects and sessions\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [selectedSessions, setSelectedSessions] = useState({});\n  const [subjectColors, setSubjectColors] = useState({});\n  const [showColorPicker, setShowColorPicker] = useState(null);\n  const [conflicts, setConflicts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const fileInputRef = useRef(null);\n  const timetableRef = useRef(null);\n\n  // Get available subjects (those not already selected)\n  const availableSubjects = courseData.subjects.filter(subject => !selectedSubjects.find(s => s.code === subject.code)).filter(subject => searchTerm === '' || subject.code.toLowerCase().includes(searchTerm.toLowerCase()) || subject.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Add a subject to the selection with a random color\n  const addSubject = subjectCode => {\n    const subject = courseData.subjects.find(s => s.code === subjectCode);\n    if (subject) {\n      // Assign a random color from color options\n      const randomIndex = Math.floor(Math.random() * colorOptions.length);\n      const randomColor = colorOptions[randomIndex];\n      setSelectedSubjects([...selectedSubjects, subject]);\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: randomColor\n      }));\n    }\n  };\n\n  // Change the color of a subject\n  const changeSubjectColor = (subjectCode, colorName) => {\n    const selectedColor = colorOptions.find(color => color.name === colorName);\n    if (selectedColor) {\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: selectedColor\n      }));\n      setShowColorPicker(null);\n    }\n  };\n\n  // Remove a subject from the selection\n  const removeSubject = subjectCode => {\n    setSelectedSubjects(selectedSubjects.filter(s => s.code !== subjectCode));\n\n    // Clear selected sessions for this subject\n    const newSelectedSessions = {\n      ...selectedSessions\n    };\n    Object.keys(newSelectedSessions).forEach(key => {\n      if (key.startsWith(subjectCode)) {\n        delete newSelectedSessions[key];\n      }\n    });\n    setSelectedSessions(newSelectedSessions);\n\n    // Remove the subject color\n    const newSubjectColors = {\n      ...subjectColors\n    };\n    delete newSubjectColors[subjectCode];\n    setSubjectColors(newSubjectColors);\n  };\n\n  // Select or unselect a session option for a component\n  const toggleSession = (subjectCode, componentName, optionId) => {\n    const sessionKey = `${subjectCode}-${componentName}`;\n    const isCurrentlySelected = selectedSessions[sessionKey] === optionId;\n\n    // Create a copy of current selections\n    const newSelectedSessions = {\n      ...selectedSessions\n    };\n    if (isCurrentlySelected) {\n      // If this option is already selected, unselect it\n      delete newSelectedSessions[sessionKey];\n    } else {\n      // If this option is not selected, select it and make any previous selection for this component unselected\n      newSelectedSessions[sessionKey] = optionId;\n    }\n\n    // Update the state\n    setSelectedSessions(newSelectedSessions);\n\n    // Check for conflicts\n    detectConflicts(newSelectedSessions);\n  };\n\n  // Check for time conflicts between selected sessions\n  const detectConflicts = selections => {\n    const sessions = [];\n\n    // Get all sessions from selections\n    Object.entries(selections).forEach(([key, optionId]) => {\n      const [subjectCode, componentName] = key.split('-');\n      const subject = selectedSubjects.find(s => s.code === subjectCode);\n      if (!subject) return;\n      const component = subject.components.find(c => c.name === componentName);\n      if (!component) return;\n      const option = component.options.find(o => o.id === optionId);\n      if (!option) return;\n      option.sessions.forEach(session => {\n        sessions.push({\n          id: `${optionId}-${session.day}-${session.startTime}`,\n          subjectCode,\n          day: session.day,\n          startTime: session.startTime,\n          endTime: session.endTime,\n          ...session\n        });\n      });\n    });\n\n    // Detect conflicts\n    const newConflicts = [];\n    for (let i = 0; i < sessions.length; i++) {\n      for (let j = i + 1; j < sessions.length; j++) {\n        const sessionA = sessions[i];\n        const sessionB = sessions[j];\n        if (sessionA.day === sessionB.day) {\n          // Check for time overlap\n          const startA = timeToMinutes(sessionA.startTime);\n          const endA = timeToMinutes(sessionA.endTime);\n          const startB = timeToMinutes(sessionB.startTime);\n          const endB = timeToMinutes(sessionB.endTime);\n          if (startA <= startB && endA > startB || startB <= startA && endB > startA) {\n            newConflicts.push([sessionA.id, sessionB.id]);\n          }\n        }\n      }\n    }\n    setConflicts(newConflicts);\n  };\n\n  // Helper function to convert time to minutes for comparison\n  const timeToMinutes = timeStr => {\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n\n  // Get all sessions to display in the timetable\n  const getAllSessions = () => {\n    // Array to store all sessions including selected and unselected\n    const allSessions = [];\n\n    // Collect all sessions from all subjects\n    selectedSubjects.forEach(subject => {\n      subject.components.forEach(component => {\n        component.options.forEach(option => {\n          const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n          option.sessions.forEach(session => {\n            allSessions.push({\n              id: `${option.id}-${session.day}-${session.startTime}`,\n              subjectCode: subject.code,\n              componentName: component.name,\n              optionId: option.id,\n              selected: isSelected,\n              day: session.day,\n              startTime: session.startTime,\n              endTime: session.endTime,\n              location: session.location,\n              instructor: session.instructor,\n              type: session.type\n            });\n          });\n        });\n      });\n    });\n\n    // Store only selected sessions by day\n    const selectedSessionsByDay = {};\n    days.forEach(day => {\n      // Get all selected sessions for this day\n      selectedSessionsByDay[day] = allSessions.filter(s => s.selected && s.day === day);\n\n      // Sort by start time for consistent ordering \n      selectedSessionsByDay[day].sort((a, b) => timeToMinutes(a.startTime) - timeToMinutes(b.startTime));\n    });\n\n    // Now directly assign positioning properties to each session\n    allSessions.forEach(session => {\n      // Only handle selected sessions for spacing\n      if (session.selected) {\n        const daySessions = selectedSessionsByDay[session.day];\n\n        // Find overlapping sessions (by checking time slots)\n        const overlappingSessions = daySessions.filter(otherSession => {\n          // Skip if it's the same session\n          if (otherSession.id === session.id) {\n            return false;\n          }\n\n          // Convert times to minutes for comparison\n          const sessionStart = timeToMinutes(session.startTime);\n          const sessionEnd = timeToMinutes(session.endTime);\n          const otherStart = timeToMinutes(otherSession.startTime);\n          const otherEnd = timeToMinutes(otherSession.endTime);\n\n          // Check if these sessions overlap in time\n          return sessionStart < otherEnd && sessionEnd > otherStart;\n        });\n        if (overlappingSessions.length > 0) {\n          // This session overlaps with others\n          // Create an overlap group with this session and all overlapping sessions\n          const overlapGroup = [session, ...overlappingSessions];\n\n          // De-duplicate in case there are repeated sessions\n          const uniqueGroup = [...new Set(overlapGroup)];\n\n          // Find this session's position in the group\n          const overlapIndex = uniqueGroup.findIndex(s => s.id === session.id);\n\n          // Assign overlap properties\n          session.hasOverlap = true;\n          session.overlapCount = uniqueGroup.length;\n          session.overlapIndex = overlapIndex;\n        } else {\n          // No overlap\n          session.hasOverlap = false;\n        }\n      }\n    });\n    return allSessions;\n  };\n\n  // Ensure timetable measurements are updated when window resizes\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render to recalculate positions\n      setSelectedSubjects([...selectedSubjects]);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [selectedSubjects]);\n\n  // Check if a session has a conflict\n  const hasConflict = sessionId => {\n    return conflicts.some(conflict => conflict[0] === sessionId || conflict[1] === sessionId);\n  };\n\n  // Export timetable as JSON\n  const exportJson = () => {\n    if (selectedSubjects.length === 0) {\n      showNotification('Please select at least one subject before exporting', 'warning');\n      return;\n    }\n    const data = {\n      selectedSubjects: selectedSubjects.map(s => s.code),\n      selectedSessions,\n      subjectColors\n    };\n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'timetable.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    showNotification('Timetable exported successfully!', 'success');\n  };\n\n  // Import timetable from JSON\n  const importJson = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsLoading(true);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const data = JSON.parse(e.target.result);\n\n        // Reset current selections\n        setSelectedSubjects([]);\n        setSelectedSessions({});\n\n        // Add subjects\n        const subjectPromises = data.selectedSubjects.map(code => {\n          const subject = courseData.subjects.find(s => s.code === code);\n          return subject;\n        }).filter(Boolean);\n        setSelectedSubjects(subjectPromises);\n\n        // Set selected sessions\n        setSelectedSessions(data.selectedSessions);\n\n        // Import subject colors if available\n        if (data.subjectColors) {\n          setSubjectColors(data.subjectColors);\n        } else {\n          // Generate colors for subjects if not included in the import\n          const newSubjectColors = {};\n          data.selectedSubjects.forEach(code => {\n            const randomIndex = Math.floor(Math.random() * colorOptions.length);\n            newSubjectColors[code] = colorOptions[randomIndex];\n          });\n          setSubjectColors(newSubjectColors);\n        }\n\n        // Check for conflicts\n        setTimeout(() => {\n          detectConflicts(data.selectedSessions);\n          setIsLoading(false);\n          showNotification('Timetable imported successfully!', 'success');\n        }, 100);\n      } catch (error) {\n        console.error('Error importing timetable:', error);\n        setIsLoading(false);\n        showNotification('Error importing timetable. Please check the file format.', 'error');\n      }\n    };\n    reader.readAsText(file);\n\n    // Reset file input\n    event.target.value = '';\n  };\n\n  // Export timetable as image\n  const exportImage = () => {\n    if (!timetableRef.current) return;\n    html2canvas(timetableRef.current).then(canvas => {\n      const image = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = 'timetable.png';\n      link.click();\n    });\n  };\n\n  // Show notification\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Get calendar time slots\n  const timeSlots = [];\n  for (let hour = 8; hour < 21; hour++) {\n    for (let minute of [0, 30]) {\n      if (hour === 8 && minute === 0) continue; // Start at 8:30\n      if (hour === 20 && minute === 30) continue; // End at 20:30\n\n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      timeSlots.push(time);\n    }\n  }\n\n  // Days of the week\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n  // Calculate session position and height in the timetable grid\n  const getSessionStyle = session => {\n    const startMinutes = timeToMinutes(session.startTime);\n    const endMinutes = timeToMinutes(session.endTime);\n    const duration = endMinutes - startMinutes;\n\n    // 8:30 starts at 0\n    const startFromFirstSlot = startMinutes - timeToMinutes('08:30');\n\n    // Each 30 minutes is 60px high\n    const top = startFromFirstSlot / 30 * 60;\n    const height = duration / 30 * 60;\n    return {\n      top: `${top}px`,\n      height: `${height}px`\n    };\n  };\n\n  // Determine session card color based on subject and selection status\n  const getSessionColor = session => {\n    const subjectColor = subjectColors[session.subjectCode] || colorOptions[0];\n    if (hasConflict(session.id) && session.selected) {\n      return subjectColor.conflict; // Conflict\n    }\n    if (session.selected) {\n      return subjectColor.selected; // Selected\n    }\n    return subjectColor.unselected; // Available but not selected\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen bg-gray-100\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed top-4 right-4 p-3 rounded shadow-lg z-50 ${notification.type === 'success' ? 'bg-green-500 text-white' : notification.type === 'error' ? 'bg-red-500 text-white' : notification.type === 'warning' ? 'bg-yellow-500 text-white' : 'bg-blue-500 text-white'}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-700 text-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex flex-col sm:flex-row justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-2 sm:mb-0\",\n          children: \"University Timetable Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-2 flex flex-wrap justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportJson,\n            className: \"bg-white text-blue-700 px-3 py-1 rounded mb-2 sm:mb-0\",\n            disabled: isLoading,\n            children: \"Export JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportImage,\n            className: \"bg-white text-blue-700 px-3 py-1 rounded\",\n            disabled: isLoading,\n            children: \"Export Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            className: \"hidden\",\n            ref: fileInputRef,\n            onChange: importJson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            className: \"bg-white text-blue-700 px-3 py-1 rounded\",\n            disabled: isLoading,\n            children: \"Import JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 flex flex-col lg:flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 bg-white p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Subject Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Search Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-grow p-2 border rounded-l\",\n              placeholder: \"Search by code or name\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-200 px-3 rounded-r border-t border-r border-b\",\n              onClick: () => setSearchTerm(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-60 overflow-y-auto border rounded\",\n            children: availableSubjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-2 text-gray-500\",\n              children: \"No subjects found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this) : availableSubjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 hover:bg-blue-50 cursor-pointer border-b flex justify-between items-center\",\n              onClick: () => addSubject(subject.code),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: subject.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm\",\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-blue-600 text-sm\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this)]\n            }, subject.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold mb-2\",\n            children: \"Selected Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), selectedSubjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"No subjects selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: selectedSubjects.map(subject => {\n              var _subjectColors$subjec;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-3 rounded bg-gray-50 hover:bg-gray-100 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `w-6 h-6 mr-2 rounded ${((_subjectColors$subjec = subjectColors[subject.code]) === null || _subjectColors$subjec === void 0 ? void 0 : _subjectColors$subjec.selected) || 'bg-gray-300'} cursor-pointer`,\n                      onClick: () => setShowColorPicker(showColorPicker === subject.code ? null : subject.code),\n                      title: \"Change color\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-bold\",\n                      children: [subject.code, \" - \", subject.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeSubject(subject.code),\n                    className: \"text-red-500 hover:text-red-700 p-1 rounded hover:bg-red-50\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 21\n                }, this), showColorPicker === subject.code && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white p-2 mb-3 border rounded shadow-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-semibold mb-2\",\n                    children: \"Select color:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-6 gap-1\",\n                    children: colorOptions.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `w-6 h-6 rounded ${color.selected} cursor-pointer hover:scale-110 transition-transform`,\n                      onClick: () => changeSubjectColor(subject.code, color.name),\n                      title: color.name\n                    }, color.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this), subject.components.map(component => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"font-semibold border-b pb-1 mb-2\",\n                    children: [component.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pl-4\",\n                    children: component.options.map(option => {\n                      const firstSession = option.sessions[0];\n                      const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n\n                      // Check if this option has any conflicts\n                      const hasSessionConflict = option.sessions.some(session => {\n                        const sessionId = `${option.id}-${session.day}-${session.startTime}`;\n                        return hasConflict(sessionId);\n                      });\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `flex items-center space-x-2 my-1 p-1 rounded ${isSelected ? 'bg-green-100' : hasSessionConflict && isSelected ? 'bg-red-100' : ''}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          id: option.id,\n                          checked: isSelected,\n                          onChange: () => toggleSession(subject.code, component.name, option.id)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 610,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: option.id,\n                          className: \"text-sm flex flex-col\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [firstSession.day, \" \", firstSession.startTime, \"-\", firstSession.endTime]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-600\",\n                            children: firstSession.location\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 618,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-600\",\n                            children: firstSession.instructor\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 619,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 616,\n                          columnNumber: 33\n                        }, this), option.sessions.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-xs bg-yellow-100 px-1 rounded\",\n                          children: [\"+\", option.sessions.length - 1, \" more\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 622,\n                          columnNumber: 35\n                        }, this), hasSessionConflict && isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-xs text-red-600 font-bold\",\n                          children: \"Conflict!\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 625,\n                          columnNumber: 35\n                        }, this)]\n                      }, option.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, this)]\n                }, `${subject.code}-${component.name}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this))]\n              }, subject.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-2/3 bg-white p-4 rounded shadow overflow-x-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Weekly Timetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: timetableRef,\n          className: \"relative\",\n          style: {\n            minWidth: \"800px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20 font-bold p-2 border-r\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 flex\",\n              children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 font-bold p-2 text-center border-r\",\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [timeSlots.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                height: \"60px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-20 p-2 text-xs border-r\",\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 flex\",\n                children: days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 border-r relative\",\n                  style: {\n                    height: \"100%\"\n                  }\n                }, `${day}-${time}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)]\n            }, time, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this)), getAllSessions().map(session => {\n              const dayIndex = days.indexOf(session.day);\n              if (dayIndex === -1) return null;\n              const style = getSessionStyle(session);\n              const colorClass = getSessionColor(session);\n\n              // Calculate position for the current day column\n              // First get the width of the time column (w-20 = 5rem = 80px)\n              const timeColumnWidth = 80;\n\n              // Get the timetable container width\n              const timetableContainer = timetableRef.current;\n              const containerWidth = (timetableContainer === null || timetableContainer === void 0 ? void 0 : timetableContainer.clientWidth) || 800;\n\n              // Calculate the total available width for day columns\n              const totalWidth = containerWidth - timeColumnWidth;\n              const dayColumnWidth = totalWidth / days.length;\n\n              // Basic column calculations\n              const dayColWidth = totalWidth / days.length;\n              const availableWidth = dayColWidth - 4; // Subtract some margin\n\n              // Initialize position values\n              let cardWidth = availableWidth;\n              let offsetX = 0;\n\n              // If this session has overlaps and is selected, adjust its width and position\n              if (session.selected && session.hasOverlap) {\n                // Divide the column width by number of overlapping sessions\n                cardWidth = availableWidth / session.overlapCount;\n\n                // Position this card based on its index in the overlap group\n                offsetX = cardWidth * session.overlapIndex;\n\n                // Log for debugging\n                console.log(`Session: ${session.subjectCode} (${session.day} ${session.startTime}-${session.endTime})`, {\n                  overlaps: session.overlapCount,\n                  position: session.overlapIndex,\n                  width: cardWidth.toFixed(1),\n                  offset: offsetX.toFixed(1)\n                });\n              }\n\n              // Final position calculation\n              const leftPosition = timeColumnWidth + dayIndex * dayColWidth + offsetX;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `absolute border-2 p-1 overflow-hidden text-xs rounded shadow-sm hover:shadow-md transition-shadow ${colorClass} cursor-pointer`,\n                style: {\n                  ...style,\n                  left: `${leftPosition}px`,\n                  width: `${cardWidth}px`,\n                  boxSizing: 'border-box',\n                  zIndex: session.selected ? 2 : 1,\n                  border: session.selected && session.hasOverlap ? '2px solid black' : undefined,\n                  opacity: session.selected ? 1 : 0.7,\n                  cursor: 'pointer'\n                },\n                onClick: () => toggleSession(session.subjectCode, session.componentName, session.optionId),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: session.subjectCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-semibold\",\n                  children: session.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs\",\n                  children: [session.startTime, \"-\", session.endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs truncate\",\n                  children: session.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs truncate italic\",\n                  children: session.instructor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 21\n                }, this), hasConflict(session.id) && session.selected && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute top-0 right-0 w-4 h-4 flex items-center justify-center bg-red-500 text-white rounded-full text-xs font-bold\",\n                  children: \"!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 23\n                }, this)]\n              }, session.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), conflicts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: [\"Warning: Your schedule has \", conflicts.length, \" time conflicts. Please resolve them.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UhrY1bVzDkYgHT+hozhVop5TqA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","courseData","html2canvas","_","jsxDEV","_jsxDEV","App","_s","colorOptions","name","selected","unselected","conflict","selectedSubjects","setSelectedSubjects","selectedSessions","setSelectedSessions","subjectColors","setSubjectColors","showColorPicker","setShowColorPicker","conflicts","setConflicts","searchTerm","setSearchTerm","isLoading","setIsLoading","notification","setNotification","fileInputRef","timetableRef","availableSubjects","subjects","filter","subject","find","s","code","toLowerCase","includes","addSubject","subjectCode","randomIndex","Math","floor","random","length","randomColor","prev","changeSubjectColor","colorName","selectedColor","color","removeSubject","newSelectedSessions","Object","keys","forEach","key","startsWith","newSubjectColors","toggleSession","componentName","optionId","sessionKey","isCurrentlySelected","detectConflicts","selections","sessions","entries","split","component","components","c","option","options","o","id","session","push","day","startTime","endTime","newConflicts","i","j","sessionA","sessionB","startA","timeToMinutes","endA","startB","endB","timeStr","hours","minutes","map","Number","getAllSessions","allSessions","isSelected","location","instructor","type","selectedSessionsByDay","days","sort","a","b","daySessions","overlappingSessions","otherSession","sessionStart","sessionEnd","otherStart","otherEnd","overlapGroup","uniqueGroup","Set","overlapIndex","findIndex","hasOverlap","overlapCount","handleResize","window","addEventListener","removeEventListener","hasConflict","sessionId","some","exportJson","showNotification","data","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importJson","event","file","target","files","reader","FileReader","onload","e","parse","result","subjectPromises","Boolean","setTimeout","error","console","readAsText","value","exportImage","current","then","canvas","image","toDataURL","link","href","download","message","timeSlots","hour","minute","time","toString","padStart","getSessionStyle","startMinutes","endMinutes","duration","startFromFirstSlot","top","height","getSessionColor","subjectColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","accept","ref","onChange","placeholder","_subjectColors$subjec","title","firstSession","hasSessionConflict","checked","htmlFor","style","minWidth","index","dayIndex","indexOf","colorClass","timeColumnWidth","timetableContainer","containerWidth","clientWidth","totalWidth","dayColumnWidth","dayColWidth","availableWidth","cardWidth","offsetX","log","overlaps","position","width","toFixed","offset","leftPosition","left","boxSizing","zIndex","border","undefined","opacity","cursor","_c","$RefreshReg$"],"sources":["/home/ubuntu/projects/timetable-chooser/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { courseData } from './data/courseData';\nimport html2canvas from 'html2canvas';\nimport _ from 'lodash';\n\nfunction App() {\n  // Predefined muted color options\n  const colorOptions = [\n    { name: \"Slate\", selected: \"bg-slate-300 border-slate-500\", unselected: \"bg-slate-200 border-slate-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Gray\", selected: \"bg-gray-300 border-gray-500\", unselected: \"bg-gray-200 border-gray-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Zinc\", selected: \"bg-zinc-300 border-zinc-500\", unselected: \"bg-zinc-200 border-zinc-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Stone\", selected: \"bg-stone-300 border-stone-500\", unselected: \"bg-stone-200 border-stone-400\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Red\", selected: \"bg-red-200 border-red-400\", unselected: \"bg-red-100 border-red-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Orange\", selected: \"bg-orange-200 border-orange-400\", unselected: \"bg-orange-100 border-orange-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Amber\", selected: \"bg-amber-200 border-amber-400\", unselected: \"bg-amber-100 border-amber-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Yellow\", selected: \"bg-yellow-200 border-yellow-400\", unselected: \"bg-yellow-100 border-yellow-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Lime\", selected: \"bg-lime-200 border-lime-400\", unselected: \"bg-lime-100 border-lime-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Green\", selected: \"bg-green-200 border-green-400\", unselected: \"bg-green-100 border-green-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Emerald\", selected: \"bg-emerald-200 border-emerald-400\", unselected: \"bg-emerald-100 border-emerald-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Teal\", selected: \"bg-teal-200 border-teal-400\", unselected: \"bg-teal-100 border-teal-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Cyan\", selected: \"bg-cyan-200 border-cyan-400\", unselected: \"bg-cyan-100 border-cyan-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Sky\", selected: \"bg-sky-200 border-sky-400\", unselected: \"bg-sky-100 border-sky-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Blue\", selected: \"bg-blue-200 border-blue-400\", unselected: \"bg-blue-100 border-blue-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Indigo\", selected: \"bg-indigo-200 border-indigo-400\", unselected: \"bg-indigo-100 border-indigo-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Violet\", selected: \"bg-violet-200 border-violet-400\", unselected: \"bg-violet-100 border-violet-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Purple\", selected: \"bg-purple-200 border-purple-400\", unselected: \"bg-purple-100 border-purple-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Fuchsia\", selected: \"bg-fuchsia-200 border-fuchsia-400\", unselected: \"bg-fuchsia-100 border-fuchsia-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Pink\", selected: \"bg-pink-200 border-pink-400\", unselected: \"bg-pink-100 border-pink-300\", conflict: \"bg-red-300 border-red-500\" },\n    { name: \"Rose\", selected: \"bg-rose-200 border-rose-400\", unselected: \"bg-rose-100 border-rose-300\", conflict: \"bg-red-300 border-red-500\" }\n  ];\n\n  // State for selected subjects and sessions\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [selectedSessions, setSelectedSessions] = useState({});\n  const [subjectColors, setSubjectColors] = useState({});\n  const [showColorPicker, setShowColorPicker] = useState(null);\n  const [conflicts, setConflicts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const fileInputRef = useRef(null);\n  const timetableRef = useRef(null);\n\n  // Get available subjects (those not already selected)\n  const availableSubjects = courseData.subjects\n    .filter(subject => !selectedSubjects.find(s => s.code === subject.code))\n    .filter(subject => \n      searchTerm === '' || \n      subject.code.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      subject.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n  // Add a subject to the selection with a random color\n  const addSubject = (subjectCode) => {\n    const subject = courseData.subjects.find(s => s.code === subjectCode);\n    if (subject) {\n      // Assign a random color from color options\n      const randomIndex = Math.floor(Math.random() * colorOptions.length);\n      const randomColor = colorOptions[randomIndex];\n      \n      setSelectedSubjects([...selectedSubjects, subject]);\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: randomColor\n      }));\n    }\n  };\n  \n  // Change the color of a subject\n  const changeSubjectColor = (subjectCode, colorName) => {\n    const selectedColor = colorOptions.find(color => color.name === colorName);\n    if (selectedColor) {\n      setSubjectColors(prev => ({\n        ...prev,\n        [subjectCode]: selectedColor\n      }));\n      setShowColorPicker(null);\n    }\n  };\n\n  // Remove a subject from the selection\n  const removeSubject = (subjectCode) => {\n    setSelectedSubjects(selectedSubjects.filter(s => s.code !== subjectCode));\n    \n    // Clear selected sessions for this subject\n    const newSelectedSessions = {...selectedSessions};\n    Object.keys(newSelectedSessions).forEach(key => {\n      if (key.startsWith(subjectCode)) {\n        delete newSelectedSessions[key];\n      }\n    });\n    setSelectedSessions(newSelectedSessions);\n    \n    // Remove the subject color\n    const newSubjectColors = {...subjectColors};\n    delete newSubjectColors[subjectCode];\n    setSubjectColors(newSubjectColors);\n  };\n\n  // Select or unselect a session option for a component\n  const toggleSession = (subjectCode, componentName, optionId) => {\n    const sessionKey = `${subjectCode}-${componentName}`;\n    const isCurrentlySelected = selectedSessions[sessionKey] === optionId;\n    \n    // Create a copy of current selections\n    const newSelectedSessions = { ...selectedSessions };\n    \n    if (isCurrentlySelected) {\n      // If this option is already selected, unselect it\n      delete newSelectedSessions[sessionKey];\n    } else {\n      // If this option is not selected, select it and make any previous selection for this component unselected\n      newSelectedSessions[sessionKey] = optionId;\n    }\n    \n    // Update the state\n    setSelectedSessions(newSelectedSessions);\n    \n    // Check for conflicts\n    detectConflicts(newSelectedSessions);\n  };\n\n  // Check for time conflicts between selected sessions\n  const detectConflicts = (selections) => {\n    const sessions = [];\n    \n    // Get all sessions from selections\n    Object.entries(selections).forEach(([key, optionId]) => {\n      const [subjectCode, componentName] = key.split('-');\n      const subject = selectedSubjects.find(s => s.code === subjectCode);\n      if (!subject) return;\n      \n      const component = subject.components.find(c => c.name === componentName);\n      if (!component) return;\n      \n      const option = component.options.find(o => o.id === optionId);\n      if (!option) return;\n      \n      option.sessions.forEach(session => {\n        sessions.push({\n          id: `${optionId}-${session.day}-${session.startTime}`,\n          subjectCode,\n          day: session.day,\n          startTime: session.startTime,\n          endTime: session.endTime,\n          ...session\n        });\n      });\n    });\n    \n    // Detect conflicts\n    const newConflicts = [];\n    for (let i = 0; i < sessions.length; i++) {\n      for (let j = i + 1; j < sessions.length; j++) {\n        const sessionA = sessions[i];\n        const sessionB = sessions[j];\n        \n        if (sessionA.day === sessionB.day) {\n          // Check for time overlap\n          const startA = timeToMinutes(sessionA.startTime);\n          const endA = timeToMinutes(sessionA.endTime);\n          const startB = timeToMinutes(sessionB.startTime);\n          const endB = timeToMinutes(sessionB.endTime);\n          \n          if ((startA <= startB && endA > startB) || \n              (startB <= startA && endB > startA)) {\n            newConflicts.push([sessionA.id, sessionB.id]);\n          }\n        }\n      }\n    }\n    \n    setConflicts(newConflicts);\n  };\n\n  // Helper function to convert time to minutes for comparison\n  const timeToMinutes = (timeStr) => {\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n\n  // Get all sessions to display in the timetable\n  const getAllSessions = () => {\n    // Array to store all sessions including selected and unselected\n    const allSessions = [];\n    \n    // Collect all sessions from all subjects\n    selectedSubjects.forEach(subject => {\n      subject.components.forEach(component => {\n        component.options.forEach(option => {\n          const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n          \n          option.sessions.forEach(session => {\n            allSessions.push({\n              id: `${option.id}-${session.day}-${session.startTime}`,\n              subjectCode: subject.code,\n              componentName: component.name,\n              optionId: option.id,\n              selected: isSelected,\n              day: session.day,\n              startTime: session.startTime,\n              endTime: session.endTime,\n              location: session.location,\n              instructor: session.instructor,\n              type: session.type\n            });\n          });\n        });\n      });\n    });\n    \n    // Store only selected sessions by day\n    const selectedSessionsByDay = {};\n    days.forEach(day => {\n      // Get all selected sessions for this day\n      selectedSessionsByDay[day] = allSessions.filter(s => s.selected && s.day === day);\n      \n      // Sort by start time for consistent ordering \n      selectedSessionsByDay[day].sort((a, b) => timeToMinutes(a.startTime) - timeToMinutes(b.startTime));\n    });\n    \n    // Now directly assign positioning properties to each session\n    allSessions.forEach(session => {\n      // Only handle selected sessions for spacing\n      if (session.selected) {\n        const daySessions = selectedSessionsByDay[session.day];\n        \n        // Find overlapping sessions (by checking time slots)\n        const overlappingSessions = daySessions.filter(otherSession => {\n          // Skip if it's the same session\n          if (otherSession.id === session.id) {\n            return false;\n          }\n          \n          // Convert times to minutes for comparison\n          const sessionStart = timeToMinutes(session.startTime);\n          const sessionEnd = timeToMinutes(session.endTime);\n          const otherStart = timeToMinutes(otherSession.startTime);\n          const otherEnd = timeToMinutes(otherSession.endTime);\n          \n          // Check if these sessions overlap in time\n          return (sessionStart < otherEnd && sessionEnd > otherStart);\n        });\n        \n        if (overlappingSessions.length > 0) {\n          // This session overlaps with others\n          // Create an overlap group with this session and all overlapping sessions\n          const overlapGroup = [session, ...overlappingSessions];\n          \n          // De-duplicate in case there are repeated sessions\n          const uniqueGroup = [...new Set(overlapGroup)];\n          \n          // Find this session's position in the group\n          const overlapIndex = uniqueGroup.findIndex(s => s.id === session.id);\n          \n          // Assign overlap properties\n          session.hasOverlap = true;\n          session.overlapCount = uniqueGroup.length;\n          session.overlapIndex = overlapIndex;\n        } else {\n          // No overlap\n          session.hasOverlap = false;\n        }\n      }\n    });\n    \n    return allSessions;\n  };\n  \n  // Ensure timetable measurements are updated when window resizes\n  useEffect(() => {\n    const handleResize = () => {\n      // Force a re-render to recalculate positions\n      setSelectedSubjects([...selectedSubjects]);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [selectedSubjects]);\n\n  // Check if a session has a conflict\n  const hasConflict = (sessionId) => {\n    return conflicts.some(conflict => \n      conflict[0] === sessionId || conflict[1] === sessionId\n    );\n  };\n\n  // Export timetable as JSON\n  const exportJson = () => {\n    if (selectedSubjects.length === 0) {\n      showNotification('Please select at least one subject before exporting', 'warning');\n      return;\n    }\n    \n    const data = {\n      selectedSubjects: selectedSubjects.map(s => s.code),\n      selectedSessions,\n      subjectColors\n    };\n    \n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'timetable.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    \n    showNotification('Timetable exported successfully!', 'success');\n  };\n  \n  // Import timetable from JSON\n  const importJson = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setIsLoading(true);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        \n        // Reset current selections\n        setSelectedSubjects([]);\n        setSelectedSessions({});\n        \n        // Add subjects\n        const subjectPromises = data.selectedSubjects.map(code => {\n          const subject = courseData.subjects.find(s => s.code === code);\n          return subject;\n        }).filter(Boolean);\n        \n        setSelectedSubjects(subjectPromises);\n        \n        // Set selected sessions\n        setSelectedSessions(data.selectedSessions);\n        \n        // Import subject colors if available\n        if (data.subjectColors) {\n          setSubjectColors(data.subjectColors);\n        } else {\n          // Generate colors for subjects if not included in the import\n          const newSubjectColors = {};\n          data.selectedSubjects.forEach(code => {\n            const randomIndex = Math.floor(Math.random() * colorOptions.length);\n            newSubjectColors[code] = colorOptions[randomIndex];\n          });\n          setSubjectColors(newSubjectColors);\n        }\n        \n        // Check for conflicts\n        setTimeout(() => {\n          detectConflicts(data.selectedSessions);\n          setIsLoading(false);\n          showNotification('Timetable imported successfully!', 'success');\n        }, 100);\n      } catch (error) {\n        console.error('Error importing timetable:', error);\n        setIsLoading(false);\n        showNotification('Error importing timetable. Please check the file format.', 'error');\n      }\n    };\n    \n    reader.readAsText(file);\n    \n    // Reset file input\n    event.target.value = '';\n  };\n  \n  // Export timetable as image\n  const exportImage = () => {\n    if (!timetableRef.current) return;\n    \n    html2canvas(timetableRef.current).then(canvas => {\n      const image = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = 'timetable.png';\n      link.click();\n    });\n  };\n  \n  // Show notification\n  const showNotification = (message, type = 'info') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Get calendar time slots\n  const timeSlots = [];\n  for (let hour = 8; hour < 21; hour++) {\n    for (let minute of [0, 30]) {\n      if (hour === 8 && minute === 0) continue; // Start at 8:30\n      if (hour === 20 && minute === 30) continue; // End at 20:30\n      \n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      timeSlots.push(time);\n    }\n  }\n  \n  // Days of the week\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n  // Calculate session position and height in the timetable grid\n  const getSessionStyle = (session) => {\n    const startMinutes = timeToMinutes(session.startTime);\n    const endMinutes = timeToMinutes(session.endTime);\n    const duration = endMinutes - startMinutes;\n    \n    // 8:30 starts at 0\n    const startFromFirstSlot = startMinutes - timeToMinutes('08:30');\n    \n    // Each 30 minutes is 60px high\n    const top = (startFromFirstSlot / 30) * 60;\n    const height = (duration / 30) * 60;\n    \n    return {\n      top: `${top}px`,\n      height: `${height}px`\n    };\n  };\n\n  // Determine session card color based on subject and selection status\n  const getSessionColor = (session) => {\n    const subjectColor = subjectColors[session.subjectCode] || colorOptions[0];\n    \n    if (hasConflict(session.id) && session.selected) {\n      return subjectColor.conflict; // Conflict\n    }\n    if (session.selected) {\n      return subjectColor.selected; // Selected\n    }\n    return subjectColor.unselected; // Available but not selected\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\n      {/* Loading Overlay */}\n      {isLoading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-4 rounded shadow\">\n            <p className=\"text-lg\">Loading...</p>\n          </div>\n        </div>\n      )}\n      \n      {/* Notification */}\n      {notification && (\n        <div className={`fixed top-4 right-4 p-3 rounded shadow-lg z-50 ${\n          notification.type === 'success' ? 'bg-green-500 text-white' :\n          notification.type === 'error' ? 'bg-red-500 text-white' :\n          notification.type === 'warning' ? 'bg-yellow-500 text-white' :\n          'bg-blue-500 text-white'\n        }`}>\n          {notification.message}\n        </div>\n      )}\n      \n      {/* Header */}\n      <header className=\"bg-blue-700 text-white p-4\">\n        <div className=\"container mx-auto flex flex-col sm:flex-row justify-between items-center\">\n          <h1 className=\"text-2xl font-bold mb-2 sm:mb-0\">University Timetable Scheduler</h1>\n          <div className=\"space-x-2 flex flex-wrap justify-center\">\n            <button \n              onClick={exportJson}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded mb-2 sm:mb-0\"\n              disabled={isLoading}\n            >\n              Export JSON\n            </button>\n            <button \n              onClick={exportImage}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded\"\n              disabled={isLoading}\n            >\n              Export Image\n            </button>\n            <input\n              type=\"file\"\n              accept=\".json\"\n              className=\"hidden\"\n              ref={fileInputRef}\n              onChange={importJson}\n            />\n            <button \n              onClick={() => fileInputRef.current.click()}\n              className=\"bg-white text-blue-700 px-3 py-1 rounded\"\n              disabled={isLoading}\n            >\n              Import JSON\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container mx-auto p-4 flex flex-col lg:flex-row gap-4\">\n        {/* Subject Selection Panel */}\n        <div className=\"w-full lg:w-1/3 bg-white p-4 rounded shadow\">\n          <h2 className=\"text-xl font-bold mb-4\">Subject Selection</h2>\n          \n          {/* Search and Add Subject */}\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Search Subjects:</label>\n            <div className=\"flex mb-2\">\n              <input \n                type=\"text\" \n                className=\"flex-grow p-2 border rounded-l\"\n                placeholder=\"Search by code or name\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n              <button \n                className=\"bg-gray-200 px-3 rounded-r border-t border-r border-b\"\n                onClick={() => setSearchTerm('')}\n              >\n                Clear\n              </button>\n            </div>\n            \n            <div className=\"max-h-60 overflow-y-auto border rounded\">\n              {availableSubjects.length === 0 ? (\n                <p className=\"p-2 text-gray-500\">No subjects found</p>\n              ) : (\n                availableSubjects.map(subject => (\n                  <div \n                    key={subject.code} \n                    className=\"p-2 hover:bg-blue-50 cursor-pointer border-b flex justify-between items-center\"\n                    onClick={() => addSubject(subject.code)}\n                  >\n                    <div>\n                      <div className=\"font-bold\">{subject.code}</div>\n                      <div className=\"text-sm\">{subject.name}</div>\n                    </div>\n                    <button className=\"text-blue-600 text-sm\">Add</button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          {/* Selected Subjects */}\n          <div>\n            <h3 className=\"font-bold mb-2\">Selected Subjects:</h3>\n            {selectedSubjects.length === 0 ? (\n              <p className=\"text-gray-500\">No subjects selected</p>\n            ) : (\n              <div className=\"space-y-4\">\n                {selectedSubjects.map(subject => (\n                  <div key={subject.code} className=\"border p-3 rounded bg-gray-50 hover:bg-gray-100 transition-colors\">\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <div className=\"flex items-center\">\n                        <div \n                          className={`w-6 h-6 mr-2 rounded ${subjectColors[subject.code]?.selected || 'bg-gray-300'} cursor-pointer`}\n                          onClick={() => setShowColorPicker(showColorPicker === subject.code ? null : subject.code)}\n                          title=\"Change color\"\n                        ></div>\n                        <h4 className=\"font-bold\">{subject.code} - {subject.name}</h4>\n                      </div>\n                      <button \n                        onClick={() => removeSubject(subject.code)}\n                        className=\"text-red-500 hover:text-red-700 p-1 rounded hover:bg-red-50\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                    \n                    {/* Color picker dropdown */}\n                    {showColorPicker === subject.code && (\n                      <div className=\"bg-white p-2 mb-3 border rounded shadow-sm\">\n                        <div className=\"text-sm font-semibold mb-2\">Select color:</div>\n                        <div className=\"grid grid-cols-6 gap-1\">\n                          {colorOptions.map(color => (\n                            <div \n                              key={color.name}\n                              className={`w-6 h-6 rounded ${color.selected} cursor-pointer hover:scale-110 transition-transform`}\n                              onClick={() => changeSubjectColor(subject.code, color.name)}\n                              title={color.name}\n                            ></div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Component Selectors */}\n                    {subject.components.map(component => (\n                      <div key={`${subject.code}-${component.name}`} className=\"mb-3\">\n                        <h5 className=\"font-semibold border-b pb-1 mb-2\">{component.name}:</h5>\n                        <div className=\"pl-4\">\n                          {component.options.map(option => {\n                            const firstSession = option.sessions[0];\n                            const isSelected = selectedSessions[`${subject.code}-${component.name}`] === option.id;\n                            \n                            // Check if this option has any conflicts\n                            const hasSessionConflict = option.sessions.some(session => {\n                              const sessionId = `${option.id}-${session.day}-${session.startTime}`;\n                              return hasConflict(sessionId);\n                            });\n                            \n                            return (\n                              <div \n                                key={option.id} \n                                className={`flex items-center space-x-2 my-1 p-1 rounded ${\n                                  isSelected ? 'bg-green-100' : \n                                  hasSessionConflict && isSelected ? 'bg-red-100' : ''\n                                }`}\n                              >\n                                <input \n                                  type=\"checkbox\"\n                                  id={option.id}\n                                  checked={isSelected}\n                                  onChange={() => toggleSession(subject.code, component.name, option.id)}\n                                />\n                                <label htmlFor={option.id} className=\"text-sm flex flex-col\">\n                                  <span>{firstSession.day} {firstSession.startTime}-{firstSession.endTime}</span>\n                                  <span className=\"text-xs text-gray-600\">{firstSession.location}</span>\n                                  <span className=\"text-xs text-gray-600\">{firstSession.instructor}</span>\n                                </label>\n                                {option.sessions.length > 1 && (\n                                  <span className=\"text-xs bg-yellow-100 px-1 rounded\">+{option.sessions.length - 1} more</span>\n                                )}\n                                {hasSessionConflict && isSelected && (\n                                  <span className=\"text-xs text-red-600 font-bold\">Conflict!</span>\n                                )}\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Timetable Grid */}\n        <div className=\"w-full lg:w-2/3 bg-white p-4 rounded shadow overflow-x-auto\">\n          <h2 className=\"text-xl font-bold mb-4\">Weekly Timetable</h2>\n          \n          <div ref={timetableRef} className=\"relative\" style={{ minWidth: \"800px\" }}>\n            {/* Day Headers */}\n            <div className=\"flex border-b\">\n              <div className=\"w-20 font-bold p-2 border-r\">Time</div>\n              <div className=\"flex-1 flex\">\n                {days.map(day => (\n                  <div key={day} className=\"flex-1 font-bold p-2 text-center border-r\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Time Slots */}\n            <div className=\"relative\">\n              {timeSlots.map((time, index) => (\n                <div key={time} className=\"flex border-b\" style={{ height: \"60px\" }}>\n                  <div className=\"w-20 p-2 text-xs border-r\">{time}</div>\n                  <div className=\"flex-1 flex\">\n                    {days.map(day => (\n                      <div \n                        key={`${day}-${time}`} \n                        className=\"flex-1 border-r relative\"\n                        style={{ height: \"100%\" }}\n                      ></div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Session Cards */}\n              {getAllSessions().map(session => {\n                const dayIndex = days.indexOf(session.day);\n                if (dayIndex === -1) return null;\n                \n                const style = getSessionStyle(session);\n                const colorClass = getSessionColor(session);\n                \n                // Calculate position for the current day column\n                // First get the width of the time column (w-20 = 5rem = 80px)\n                const timeColumnWidth = 80;\n                \n                // Get the timetable container width\n                const timetableContainer = timetableRef.current;\n                const containerWidth = timetableContainer?.clientWidth || 800;\n                \n                // Calculate the total available width for day columns\n                const totalWidth = containerWidth - timeColumnWidth;\n                const dayColumnWidth = totalWidth / days.length;\n                \n                // Basic column calculations\n                const dayColWidth = totalWidth / days.length;\n                const availableWidth = dayColWidth - 4; // Subtract some margin\n                \n                // Initialize position values\n                let cardWidth = availableWidth;\n                let offsetX = 0;\n                \n                // If this session has overlaps and is selected, adjust its width and position\n                if (session.selected && session.hasOverlap) {\n                  // Divide the column width by number of overlapping sessions\n                  cardWidth = availableWidth / session.overlapCount;\n                  \n                  // Position this card based on its index in the overlap group\n                  offsetX = cardWidth * session.overlapIndex;\n                  \n                  // Log for debugging\n                  console.log(`Session: ${session.subjectCode} (${session.day} ${session.startTime}-${session.endTime})`, {\n                    overlaps: session.overlapCount,\n                    position: session.overlapIndex,\n                    width: cardWidth.toFixed(1),\n                    offset: offsetX.toFixed(1)\n                  });\n                }\n                \n                // Final position calculation\n                const leftPosition = timeColumnWidth + (dayIndex * dayColWidth) + offsetX;\n                \n                return (\n                  <div \n                    key={session.id}\n                    className={`absolute border-2 p-1 overflow-hidden text-xs rounded shadow-sm hover:shadow-md transition-shadow ${colorClass} cursor-pointer`}\n                    style={{\n                      ...style,\n                      left: `${leftPosition}px`,\n                      width: `${cardWidth}px`,\n                      boxSizing: 'border-box',\n                      zIndex: session.selected ? 2 : 1,\n                      border: session.selected && session.hasOverlap ? '2px solid black' : undefined,\n                      opacity: session.selected ? 1 : 0.7,\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => toggleSession(session.subjectCode, session.componentName, session.optionId)}\n                  >\n                    <div className=\"font-bold\">{session.subjectCode}</div>\n                    <div className=\"font-semibold\">{session.type}</div>\n                    <div className=\"text-xs\">{session.startTime}-{session.endTime}</div>\n                    <div className=\"text-xs truncate\">{session.location}</div>\n                    <div className=\"text-xs truncate italic\">{session.instructor}</div>\n                    {hasConflict(session.id) && session.selected && (\n                      <div className=\"absolute top-0 right-0 w-4 h-4 flex items-center justify-center bg-red-500 text-white rounded-full text-xs font-bold\">!</div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          {/* Conflict Warning */}\n          {conflicts.length > 0 && (\n            <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n              Warning: Your schedule has {conflicts.length} time conflicts. Please resolve them.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}